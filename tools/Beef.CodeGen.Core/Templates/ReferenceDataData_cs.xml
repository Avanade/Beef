<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated" OutputFileName="ReferenceDataData.cs">
  <Set Name="System.UsesDatabase" Value="false" />
  <Set Name="System.UsesEntityFramework" Value="false" />
  <Set Name="System.UsesCosmos" Value="false" />
  <Entity>
    <Set Name="System.UsesDatabase" Condition="Entity.AutoImplement == 'Database'" Value="true" />
    <Set Name="System.UsesEntityFramework" Condition="Entity.AutoImplement == 'EntityFramework'" Value="true" />
    <Set Name="System.UsesCosmos" Condition="Entity.AutoImplement == 'Cosmos'" Value="true" />
  </Entity>
  <Header>
    <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */
 
using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef.Business;
using Beef.Mapper.Converters;
]]>
    <If Condition="Config.RefDataNamespace != null">
      <![CDATA[using RefDataNamespace = {{Config.RefDataNamespace}};
]]>
    </If>
    <If Condition="Config.RefDataBusNamespace != null">
      <![CDATA[using RefDataBusNamespace = {{Config.RefDataBusNamespace}};
]]>
    </If>
    <If Condition="System.UsesDatabase == true">
      <![CDATA[using Beef.Data.Database;
]]>
      <If Condition="Config.DatabaseUsingNamespace != null">
        <![CDATA[using {{Config.DatabaseUsingNamespace}};
]]>
      </If>
    </If>
    <If Condition="System.UsesEntityFramework == true">
      <![CDATA[using Beef.Data.EntityFrameworkCore;
]]>
      <If Condition="Config.EntityFrameworkUsingNamespace != null">
        <![CDATA[using {{Config.EntityFrameworkUsingNamespace}};
]]>
      </If>
    </If>
    <If Condition="System.UsesCosmos == true">
      <![CDATA[using Beef.Data.Cosmos;
]]>
      <If Condition="Config.CosmosUsingNamespace != null">
        <![CDATA[using {{Config.CosmosUsingNamespace}};
]]>
      </If>
    </If>
    <If Condition="Config.DataUsingNamespace != null">
      <![CDATA[using {{Config.DataUsingNamespace}};
]]>
    </If>
    <![CDATA[
namespace {{Config.Company}}.{{Config.AppName}}.Business.Data
{
    /// <summary>
    /// Provides the <b>ReferenceData</b> database access.
    /// </summary>
    public partial class ReferenceDataData : IReferenceDataData
    {
]]>
  </Header>
  <Entity>
    <Set Name="Entity.EntityName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}" Otherwise="$RefDataNamespace.{{Entity.Name}}" />
    <Set Name="Entity.EntityCollectionName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}Collection" Otherwise="$RefDataNamespace.{{Entity.Name}}Collection" />
    <If Condition="Entity.RefDataType != null and Entity.ExcludeData == false and Entity.ExcludeAll == false">
      <If Condition="System.Index > 0">
        <![CDATA[
]]>
      </If>
      <![CDATA[        /// <summary>
        /// Gets all the {{Entity.EntityName:ToSeeComments}} objects.
        /// </summary>
        /// <returns>A {{Entity.EntityCollectionName:ToSeeComments}}.</returns>
        public async Task<{{Entity.EntityCollectionName}}> {{Entity.Name}}GetAllAsync()
        {
            var __coll = new {{Entity.EntityCollectionName}}();
            await DataInvoker.Default.InvokeAsync(this, async () => ]]>
      <Set Name="Config.NewLine" Value="false" />
      <Switch Value="Entity.AutoImplement">
        <Case Value="'Database'">
          <Set Name="System.DatabaseName" Condition="Entity.DatabaseName != null" Value="Entity.DatabaseName" Otherwise="Config.DatabaseName" />
          <Set Name="System.DatabaseName" Condition="System.DatabaseName == null" Value="'Database'" />
          <![CDATA[
            {
                {{System.DatabaseName}}.Default.GetRefData<{{Entity.EntityCollectionName}}, {{Entity.EntityName}}>(__coll, "[]]>
          <If Condition="Entity.DatabaseSchema == null">
            <Then><![CDATA[dbo]]></Then>
            <Else><![CDATA[{{Entity.DatabaseSchema}}]]></Else>
          </If>
          <![CDATA[].[sp{{Entity.Name}}GetAll]", "{{Entity.Name}}Id"]]>
          <If Condition="Entity.PropertyCount > 0">
            <![CDATA[, additionalProperties: (dr, item, fields) =>
                {
]]>
            <Property Condition="Property.Inherited == false">
              <![CDATA[                    item.{{Property.Name}} = ]]>
              <If Condition="Property.DataConverter != null">
                <Then>
                  <![CDATA[{{Property.DataConverter}}]]>
                  <If Condition="Property.IsDataConverterGeneric == true">
                    <![CDATA[<{{Property.Type}}>]]>
                  </If>
                  <![CDATA[.Default.ConvertToSrce(]]>
                </Then>
                <Else>
                  <If Condition="Property.RefDataType != null">
                    <If Condition="Config.MapperDefaultRefDataConverter != null">
                      <Then><![CDATA[{{Config.MapperDefaultRefDataConverter}}<{{Property.Type}}>]]></Then>
                      <Else><![CDATA[ReferenceDataCodeConverter<{{Property.Type}}>]]></Else>
                    </If>
                    <![CDATA[.Default.ConvertToSrce(]]>
                  </If>
                </Else>
              </If>
              <![CDATA[dr.GetValue<]]>
              <If Condition="Property.RefDataType == null">
                <Then>
                  <![CDATA[{{Property.Type}}]]>
                  <If Condition="Property.Type != 'string' and Property.Nullable == true"><![CDATA[?]]></If>
                  <If Condition="Property.DataName == null">
                    <Then>
                      <![CDATA[>("{{Property.Name}}")]]>
                    </Then>
                    <Else>
                      <![CDATA[>("{{Property.DataName}}")]]>
                    </Else>
                  </If>
                </Then>
                <Else>
                  <!-- Uses the Entity RefDataType as the template for the properties entity identifier type; a bit of a Hack. -->
                  <![CDATA[{{Entity.RefDataType}}]]>
                  <If Condition="Property.Type != 'string' and Property.Nullable == true"><![CDATA[?]]></If>
                  <If Condition="Property.DataName == null">
                    <Then>
                      <![CDATA[>("{{Property.Name}}Id")]]>
                    </Then>
                    <Else>
                      <![CDATA[>("{{Property.DataName}}")]]>
                    </Else>
                  </If>
                </Else>
              </If>
              <If Condition="Property.DataConverter != null or Property.RefDataType != null">
                <![CDATA[)]]>
              </If>
              <![CDATA[.ConfigureAwait(false);
]]>
            </Property>
            <![CDATA[                }]]>
          </If>
          <![CDATA[);
                await Task.CompletedTask;
            }]]>
          <Set Name="Config.NewLine" Value="true" />
        </Case>
        <Case Value="'EntityFramework'">
          <Set Name="System.EntityFrameworkName" Condition="Entity.EntityFrameworkName != null" Value="Entity.EntityFrameworkName" Otherwise="Config.EntityFrameworkName" />
          <Set Name="System.EntityFrameworkName" Condition="System.EntityFrameworkName == null" Value="'EfDb'" />
          <![CDATA[{ {{System.EntityFrameworkName}}.Default.Query({{Entity.Name}}Mapper.CreateArgs()).SelectQuery(__coll); await Task.CompletedTask; }]]>
        </Case>
        <Case Value="'Cosmos'">
          <Set Name="System.CosmosName" Condition="Entity.CosmosName != null" Value="Entity.CosmosName" Otherwise="Config.CosmosName" />
          <Set Name="System.CosmosName" Condition="System.CosmosName == null" Value="'CosmosDb'" />
          <![CDATA[{ {{System.CosmosName}}.Default.ValueQuery({{Entity.Name}}Mapper.CreateArgs("{{Entity.CosmosContainerId}}")).SelectQuery(__coll); await Task.CompletedTask; }]]>
        </Case>
        <Default>
          <![CDATA[await this.{{Entity.Name}}GetAll_OnImplementation(__coll).ConfigureAwait(false)]]>
        </Default>
      </Switch>
      <![CDATA[, BusinessInvokerArgs.RequiresNewAndTransactionSuppress);
]]>
      <If Condition="Config.NewLine == true">
        <![CDATA[
]]>
      </If>
      <![CDATA[            return __coll;
        }
]]>
    </If>
  </Entity>
  <Entity Condition="Entity.AutoImplement == 'EntityFramework' and Entity.DataEntityFrameworkCustomMapper == false">
    <Set Name="Entity.EntityName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}" Otherwise="$RefDataNamespace.{{Entity.Name}}" />
    <Set Name="Entity.EntityCollectionName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}Collection" Otherwise="$RefDataNamespace.{{Entity.Name}}Collection" />
    <![CDATA[
        /// <summary>
        /// Provides the {{Entity.EntityName:ToSeeComments}} entity and Entity Framework {{Entity.EntityFrameworkEntity:ToSeeComments}} property mapping.
        /// </summary>
        public static EfDbMapper<{{Entity.EntityName}}, {{Entity.EntityFrameworkEntity}}> {{Entity.Name}}Mapper = EfDbMapper.CreateAuto<{{Entity.EntityName}}, {{Entity.EntityFrameworkEntity}}>()
            .HasProperty(s => s.Id, d => d.{{Entity.Name}}Id)
            .AddStandardProperties()]]>
    <Property Condition="Property.DataEntityFrameworkIgnore == false">
      <Set Name="System.RefDataSidCodeMapping" Value="false" />
      <If Condition="Property.RefDataType == 'string'">
        <If Condition="Property.DataConverter == null and Config.MapperDefaultRefDataConverter == 'ReferenceDataCodeConverter'">
          <Then>
            <Set Name="System.RefDataSidCodeMapping" Value="true" />
          </Then>
          <Else>
            <If Condition="Property.DataConverter == 'ReferenceDataCodeConverter'">
              <Set Name="System.RefDataSidCodeMapping" Value="true" />
            </If>
          </Else>
        </If>
      </If>
      <If Condition="System.RefDataSidCodeMapping == true">
        <Then>
          <![CDATA[                Property(s => s.{{Property.Name}}Sid, d => d.]]>
        </Then>
        <Else>
          <![CDATA[                Property(s => s.{{Property.Name}}, d => d.]]>
        </Else>
      </If>
      <If Condition="Property.DataName == null">
        <Then>
          <![CDATA[{{Property.Name}}]]>
        </Then>
        <Else>
          <![CDATA[{{Property.DataName}}]]>
        </Else>
      </If>
      <If Condition="Property.DataOperationTypes != null">
        <![CDATA[, operationTypes: OperationTypes.{{Property.DataOperationTypes}}]]>
      </If>
      <![CDATA[)]]>
      <If Condition="Property.UniqueKey == true">
        <If Condition="Property.DataAutoGenerated == true">
          <Then><![CDATA[.SetUniqueKey(true)]]></Then>
          <Else><![CDATA[.SetUniqueKey(false)]]></Else>
        </If>
      </If>
      <If Condition="System.RefDataSidCodeMapping == false">
        <If Condition="Property.DataConverter == null">
          <Then>
            <If Condition="Property.RefDataType != null">
              <If Condition="Config.MapperDefaultRefDataConverter != null">
                <Then><![CDATA[.SetConverter({{Config.MapperDefaultRefDataConverter}}<{{Property.Type}}>.Default)]]></Then>
                <Else><![CDATA[.SetConverter(ReferenceDataCodeConverter<{{Property.Type}}>.Default)]]></Else>
              </If>
            </If>
          </Then>
          <Else>
            <![CDATA[.SetConverter({{Property.DataConverter}}]]>
            <If Condition="Property.IsDataConverterGeneric == true">
              <![CDATA[<{{Property.Type}}>]]>
            </If>
            <![CDATA[.Default)]]>
          </Else>
        </If>
      </If>
      <If Condition="Property.DataEntityFrameworkMapper != null">
        <![CDATA[.SetMapper({{Property.DataEntityFrameworkMapper}}.Default)]]>
      </If>
    </Property>
    <![CDATA[;
]]>
  </Entity>
  <Entity Condition="Entity.AutoImplement == 'Cosmos' and Entity.DataCosmosCustomMapper == false">
    <Set Name="Entity.EntityName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}" Otherwise="$RefDataNamespace.{{Entity.Name}}" />
    <Set Name="Entity.EntityCollectionName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}Collection" Otherwise="$RefDataNamespace.{{Entity.Name}}Collection" />
    <Set Name="Entity.CosmosEntity" Condition="Entity.CosmosEntity == null" Value="${{Entity.EntityName}}" />
    <![CDATA[
        /// <summary>
        /// Provides the {{Entity.EntityName:ToSeeComments}} entity and Cosmos {{Entity.CosmosEntity:ToSeeComments}} property mapping.
        /// </summary>
        public static CosmosDbMapper<{{Entity.EntityName}}, {{Entity.CosmosEntity}}> {{Entity.Name}}Mapper = CosmosDbMapper.CreateAuto<{{Entity.EntityName}}, {{Entity.CosmosEntity}}>()
            .AddStandardProperties()]]>
    <Property Condition="Property.DataCosmosIgnore == false">
      <Set Name="System.RefDataSidCodeMapping" Value="false" />
      <If Condition="Property.RefDataType == 'string'">
        <If Condition="Property.DataConverter == null and Config.MapperDefaultRefDataConverter == 'ReferenceDataCodeConverter'">
          <Then>
            <Set Name="System.RefDataSidCodeMapping" Value="true" />
          </Then>
          <Else>
            <If Condition="Property.DataConverter == 'ReferenceDataCodeConverter'">
              <Set Name="System.RefDataSidCodeMapping" Value="true" />
            </If>
          </Else>
        </If>
      </If>
      <If Condition="System.RefDataSidCodeMapping == true">
        <Then>
          <![CDATA[                Property(s => s.{{Property.Name}}Sid, d => d.]]>
        </Then>
        <Else>
          <![CDATA[                Property(s => s.{{Property.Name}}, d => d.]]>
        </Else>
      </If>
      <If Condition="Property.DataName == null">
        <Then>
          <![CDATA[{{Property.Name}}]]>
        </Then>
        <Else>
          <![CDATA[{{Property.DataName}}]]>
        </Else>
      </If>
      <If Condition="Property.DataOperationTypes != null">
        <![CDATA[, operationTypes: OperationTypes.{{Property.DataOperationTypes}}]]>
      </If>
      <![CDATA[)]]>
      <If Condition="Property.UniqueKey == true">
        <If Condition="Property.DataAutoGenerated == true">
          <Then><![CDATA[.SetUniqueKey(true)]]></Then>
          <Else><![CDATA[.SetUniqueKey(false)]]></Else>
        </If>
      </If>
      <If Condition="System.RefDataSidCodeMapping == false">
        <If Condition="Property.DataConverter == null">
          <Then>
            <If Condition="Property.RefDataType != null">
              <If Condition="Config.MapperDefaultRefDataConverter != null">
                <Then><![CDATA[.SetConverter({{Config.MapperDefaultRefDataConverter}}<{{Property.Type}}>.Default)]]></Then>
                <Else><![CDATA[.SetConverter(ReferenceDataCodeConverter<{{Property.Type}}>.Default)]]></Else>
              </If>
            </If>
          </Then>
          <Else>
            <![CDATA[.SetConverter({{Property.DataConverter}}]]>
            <If Condition="Property.IsDataConverterGeneric == true">
              <![CDATA[<{{Property.Type}}>]]>
            </If>
            <![CDATA[.Default)]]>
          </Else>
        </If>
      </If>
      <If Condition="Property.DataCosmosMapper != null">
        <![CDATA[.SetMapper({{Property.DataCosmosMapper}}.Default)]]>
      </If>
    </Property>
    <![CDATA[;
]]>
  </Entity>
  <Footer>
    <![CDATA[    }
}
]]>
  </Footer>
</Template>