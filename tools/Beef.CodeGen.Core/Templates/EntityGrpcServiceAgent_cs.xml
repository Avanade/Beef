<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated">
  <Entity Condition="Config.Grpc == true and Entity.Grpc == true and Entity.GrpcAgent == true and Entity.OperationCount > 0">
    <Set Name="System.EntityName" Value="null" />
    <Operation Condition="Operation.Grpc == true and Operation.OperationType != 'Patch'">
      <Set Name="System.EntityName" Value="Entity.Name"/>
    </Operation>

    <Entity Condition="System.EntityExclude == false and Entity.Name == System.EntityName and Entity.EntityScope == 'Common'" OutputFileName="{{Entity.Name}}ServiceAgent.cs">
      <Exception Condition="Entity.GenericWithT == true" Message="Entity '{{Entity.Name}}' specifies GenericWithT which is not supported for a ServiceAgent; use a non-generic class instead." />
      <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Beef.Entities;
using Beef.Grpc;
using {{Config.Company}}.{{Config.AppName}}.Common.Entities;
using proto = {{Config.Company}}.{{Config.AppName}}.Common.Grpc.Proto;
]]>
      <If Condition="Config.RefDataNamespace != null">
        <![CDATA[using RefDataNamespace = {{Config.RefDataNamespace}};
]]>
      </If>
      <![CDATA[
namespace {{Config.Company}}.{{Config.AppName}}.Common.Grpc.ServiceAgents
{
    /// <summary>
    /// Defines the {{Entity.Text:ToComments}} gRPC service agent.
    /// </summary>
    public partial interface I{{Entity.Name}}ServiceAgent
    {]]>
      <Operation Condition="Operation.Grpc == true and Operation.OperationType != 'Patch'">
        <![CDATA[
        /// <summary>
]]>
        <If Condition="Operation.Text == null">
          <Then>
            <If Condition="Operation.OperationType == 'GetColl'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ collection object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Get'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Create'">
              <![CDATA[        /// Creates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Update'">
              <![CDATA[        /// Updates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Delete'">
              <![CDATA[        /// Deletes the {{Entity.Name:ToSeeComments}} object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Custom'">
              <![CDATA[        /// ???
]]>
            </If>
          </Then>
          <Else>
            <![CDATA[        /// {{Operation.Text:ToComments}}.
]]>
          </Else>
        </If>
        <![CDATA[        /// </summary>
]]>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[        /// <param name="value">The ]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
          </If>
          <![CDATA[ object.</param>
]]>
        </If>
        <Parameter>
          <If Condition="Parameter.Text == null">
            <Then>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">???</param>
]]>
            </Then>
            <Else>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">The {{Parameter.Text:ToComments}}.</param>
]]>
            </Else>
          </If>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <![CDATA[        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
]]>
        </If>
        <![CDATA[        /// <param name="requestOptions">The optional <see cref="GrpcRequestOptions"/>.</param>
        /// <returns>A <see cref="GrpcAgentResult"/>.</returns>
]]>
        <If Condition="Operation.OperationType == 'GetColl'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then><![CDATA[        Task<GrpcAgentResult<{{Entity.Name}}CollectionResult>> {{Operation.Name}}Async(]]></Then>
            <Else><![CDATA[        Task<GrpcAgentResult<{{Operation.ReturnType}}CollectionResult>> {{Operation.Name}}Async(]]></Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Get'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        Task<GrpcAgentResult<{{Entity.Name}}>> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        Task<GrpcAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        Task<GrpcAgentResult<{{Entity.Name}}>>]]>
            </Then>
            <Else>
              <![CDATA[        Task<GrpcAgentResult<{{Operation.ReturnType}}>>]]>
            </Else>
          </If>
          <![CDATA[ {{Operation.Name}}Async(]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.Name}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType}}]]></Else>
          </If>
          <![CDATA[ value]]>
        </If>
        <If Condition="Operation.OperationType == 'Delete'">
          <![CDATA[        Task<GrpcAgentResult> {{Operation.Name}}Async(]]>
        </If>
        <If Condition="Operation.OperationType == 'Custom'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        Task<GrpcAgentResult> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        Task<GrpcAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <Parameter>
          <If Condition="System.Index == 0">
            <Then>
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[, ]]>
              </If>
            </Then>
            <Else>
              <![CDATA[, ]]>
            </Else>
          </If>
          <![CDATA[{{Parameter.Type}}]]>
          <If Condition="Parameter.Nullable == true">
            <![CDATA[?]]>
          </If>
          <![CDATA[ {{Parameter.ArgumentName}}]]>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <If Condition="Operation.ParameterCount > 0">
            <![CDATA[, ]]>
          </If>
          <![CDATA[PagingArgs? paging = null]]>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.ParameterCount > 0 or Operation.PagingArgs == true">
          <![CDATA[, ]]>
        </If>
        <![CDATA[GrpcRequestOptions? requestOptions = null);
]]>
      </Operation>
      <![CDATA[    }

    /// <summary>
    /// Provides the {{Entity.Text:ToComments}} gRPC service agent.
    /// </summary>
    public partial class {{Entity.Name}}ServiceAgent : GrpcServiceAgentBase<proto.{{Entity.Name}}GrpcService.{{Entity.Name}}GrpcServiceClient, {{Entity.Name}}ServiceAgent>, I{{Entity.Name}}ServiceAgent
    {
        /// <summary>
        /// Static constructor.
        /// </summary>
        static {{Entity.Name}}ServiceAgent()
        {
            Register(() =>
            {
                var rd = Beef.WebApi.WebApiServiceAgentManager.Get<{{Entity.Name}}ServiceAgent>();
                return rd == null ? null : new {{Entity.Name}}ServiceAgent(rd.Client, rd.BeforeRequest!);
            }, false);
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="{{Entity.Name}}ServiceAgent"/> class with a <paramref name="httpClient"/>.
        /// </summary>
        /// <param name="httpClient">The <see cref="HttpClient"/>.</param>
        /// <param name="beforeRequest">The <see cref="Action{HttpRequestMessage}"/> to invoke before the <see cref="HttpRequestMessage">Http Request</see> is made (see <see cref="GrpcServiceAgentBase{TClient}.BeforeRequest"/>).</param>
        public {{Entity.Name}}ServiceAgent(HttpClient? httpClient = null, Action<HttpRequestMessage>? beforeRequest = null) : base(httpClient, beforeRequest) { }
]]>
      <Operation Condition="Operation.Grpc == true and Operation.OperationType != 'Patch'">
        <![CDATA[
        /// <summary>
]]>
        <If Condition="Operation.Text == null">
          <Then>
            <If Condition="Operation.OperationType == 'GetColl'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ collection object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Get'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Create'">
              <![CDATA[        /// Creates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Update'">
              <![CDATA[        /// Updates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Delete'">
              <![CDATA[        /// Deletes the {{Entity.Name:ToSeeComments}} object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Custom'">
              <![CDATA[        /// ???
]]>
            </If>
          </Then>
          <Else>
            <![CDATA[        /// {{Operation.Text:ToComments}}.
]]>
          </Else>
        </If>
        <![CDATA[        /// </summary>
]]>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[        /// <param name="value">The ]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
          </If>
          <![CDATA[ object.</param>
]]>
        </If>
        <Parameter>
          <If Condition="Parameter.Text == null">
            <Then>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">???</param>
]]>
            </Then>
            <Else>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">The {{Parameter.Text:ToComments}}.</param>
]]>
            </Else>
          </If>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <![CDATA[        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
]]>
        </If>
        <![CDATA[        /// <param name="requestOptions">The optional <see cref="GrpcRequestOptions"/>.</param>
        /// <returns>A <see cref="GrpcAgentResult"/>.</returns>
]]>
        <If Condition="Operation.OperationType == 'GetColl'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then><![CDATA[        public Task<GrpcAgentResult<{{Entity.Name}}CollectionResult>> {{Operation.Name}}Async(]]></Then>
            <Else><![CDATA[        public Task<GrpcAgentResult<{{Operation.ReturnType}}CollectionResult>> {{Operation.Name}}Async(]]></Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Get'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<GrpcAgentResult<{{Entity.Name}}>> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        public Task<GrpcAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<GrpcAgentResult<{{Entity.Name}}>>]]>
            </Then>
            <Else>
              <![CDATA[        public Task<GrpcAgentResult<{{Operation.ReturnType}}>>]]>
            </Else>
          </If>
          <![CDATA[ {{Operation.Name}}Async(]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.Name}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType}}]]></Else>
          </If>
          <![CDATA[ value]]>
        </If>
        <If Condition="Operation.OperationType == 'Delete'">
          <![CDATA[        public Task<GrpcAgentResult> {{Operation.Name}}Async(]]>
        </If>
        <If Condition="Operation.OperationType == 'Custom'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<GrpcAgentResult> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        public Task<GrpcAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <Parameter>
          <If Condition="System.Index == 0">
            <Then>
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[, ]]>
              </If>
            </Then>
            <Else>
              <![CDATA[, ]]>
            </Else>
          </If>
          <![CDATA[{{Parameter.Type}}]]>
          <If Condition="Parameter.Nullable == true">
            <![CDATA[?]]>
          </If>
          <![CDATA[ {{Parameter.ArgumentName}}]]>
          <If Condition="Parameter.Default != null">
            <Then>
              <![CDATA[ = {{Parameter.Default}}]]>
            </Then>
          </If>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <If Condition="Operation.ParameterCount > 0">
            <![CDATA[, ]]>
          </If>
          <![CDATA[PagingArgs? paging = null]]>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.ParameterCount > 0 or Operation.PagingArgs == true">
          <![CDATA[, ]]>
        </If>
        <![CDATA[GrpcRequestOptions? requestOptions = null)
        {
]]>
        <If Condition="Operation.ParameterCount > 0 or Operation.PagingArgs == true or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[            var __req = new proto.{{Entity.Name}}{{Operation.Name}}Request { ]]>
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
            <![CDATA[Value = Transformers.{{Entity.Name}}.MapToDest(Check.NotNull(value, nameof(value)))]]>
          </If>
          <Parameter>
            <If Condition="System.Index > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <![CDATA[, ]]>
            </If>
            <![CDATA[{{Parameter.ArgumentName:ToPascalCase}} = ]]>
            <Set Name="System.Type" Condition="Parameter.RefDataType == null" Value="Parameter.Type" Otherwise="Parameter.RefDataType" />
            <Switch Value="System.Type">
              <Case Value="'string'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'bool'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'int'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'uint'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'short'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'ushort'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'long'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'ulong'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Case Value="'DateTime'">
                <If Condition="Parameter.DateTimeTransform == 'DateOnly'">
                  <Then>
                    <![CDATA[Transformers.]]>
                    <If Condition="Parameter.Nullable == true">
                      <![CDATA[Nullable]]>
                    </If>
                    <![CDATA[DateTimeToDateOnly.ConvertToDest({{Parameter.ArgumentName}})]]>
                  </Then>
                  <Else>
                    <![CDATA[Transformers.]]>
                    <If Condition="Parameter.Nullable == true">
                      <![CDATA[Nullable]]>
                    </If>
                    <![CDATA[DateTimeToTimestamp.ConvertToDest({{Parameter.ArgumentName}})]]>
                  </Else>
                </If>
              </Case>
              <Case Value="'Guid'">
                <![CDATA[Transformers.]]>
                <If Condition="Parameter.Nullable == true">
                  <![CDATA[Nullable]]>
                </If>
                <![CDATA[GuidToStringConverter.ConvertToDest({{Parameter.ArgumentName}})]]>
              </Case>
              <Case Value="'decimal'">
                <![CDATA[Transformers.]]>
                <If Condition="Parameter.Nullable == true">
                  <![CDATA[Nullable]]>
                </If>
                <![CDATA[DecimalToDecimalConverter.ConvertToDest({{Parameter.ArgumentName}})]]>
              </Case>
              <Case Value="'TimeSpan'"><![CDATA[{{Parameter.ArgumentName}}]]></Case>
              <Default>
                <If Condition="Parameter.GrpcConverter == null and Parameter.GrpcMapper == null">
                  <![CDATA[Transformers.{{Parameter.Type}}.MapToDest({{Parameter.ArgumentName}})]]>
                </If>
              </Default>
            </Switch>
          </Parameter>
          <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
            <If Condition="Operation.ParameterCount > 0"><![CDATA[, ]]></If>
            <![CDATA[Paging = Transformers.PagingArgsToPagingArgsConverter.ConvertToDest(paging!)]]>
          </If>
          <![CDATA[ };
]]>
        </If>
        <Set Name="System.ReturnType" Value="'void'" />
        <If Condition="Operation.OperationType == 'GetColl'">
          <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="'{{Entity.Name}}CollectionResult'" Otherwise="'{{Operation.ReturnType}}CollectionResult'"/>
        </If>
        <If Condition="Operation.OperationType == 'Get'">
          <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="'{{Entity.Name}}'" Otherwise="'{{Operation.ReturnType}}'"/>
        </If>
        <If Condition="Operation.OperationType == 'Create'">
          <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="'{{Entity.Name}}'" Otherwise="'{{Operation.ReturnType}}'"/>
        </If>
        <If Condition="Operation.OperationType == 'Update'">
          <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="'{{Entity.Name}}'" Otherwise="'{{Operation.ReturnType}}'"/>
        </If>
        <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
          <Set Name="System.ReturnType" Value="'{{Operation.ReturnType}}'" />
        </If>
        <![CDATA[            return Invoke]]>
        <If Condition="System.ReturnType == 'void'">
          <Then><![CDATA[NoResult]]></Then>
          <Else><![CDATA[WithResult]]></Else>
        </If>
        <![CDATA[Async(async (c, o) => ]]>
        <If Condition="System.ReturnType != 'void'">
          <![CDATA[Transformers.{{System.ReturnType}}.MapToSrce(]]>
        </If>
        <![CDATA[await c.{{Operation.Name}}Async(]]>
        <If Condition="Operation.ParameterCount > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.PagingArgs == true">
          <![CDATA[__req, ]]>
        </If>
        <![CDATA[o)]]>
        <If Condition="System.ReturnType != 'void'">
          <![CDATA[)!]]>
        </If>
        <![CDATA[, requestOptions);
        }
]]>
      </Operation>
      <![CDATA[    }
}

#nullable restore]]>
    </Entity>
  </Entity>
</Template>