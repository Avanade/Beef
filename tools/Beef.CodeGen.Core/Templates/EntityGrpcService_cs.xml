<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated">
  <If Condition="Config.Grpc == true">
    <Entity Condition="Entity.Grpc == true and Entity.OperationCount > 0">
      <Set Name="System.EntityName" Value="null" />
      <Operation Condition="Operation.Grpc == true and Operation.OperationType != 'Patch'">
        <Set Name="System.EntityName" Value="Entity.Name"/>
      </Operation>
      <Entity Condition="Entity.Name == System.EntityName" OutputFileName="{{Entity.Name}}Service.cs">
        <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using Beef.Demo.Business;
using Beef.Grpc;
using Grpc.Core;
using System;
using System.Net;
using System.Threading.Tasks;
using {{Config.Company}}.{{Config.AppName}}.Common.Grpc;
using {{Config.Company}}.{{Config.AppName}}.Common.Grpc.Proto;

namespace {{Config.Company}}.{{Config.AppName}}.{{Config.ApiName}}.Grpc
{
    /// <summary>
    /// Provides the <b>{{Entity.Name}}</b> gRPC Server functionality.
    /// </summary>
]]>
        <Set Name="System.WebApiAuthorize" Value="null" />
        <If Condition="Config.WebApiAuthorize == 'Authorize'">
          <Set Name="System.WebApiAuthorize" Value="'Authorize'" />
        </If>
        <If Condition="Config.WebApiAuthorize == 'AllowAnonymous'">
          <Set Name="System.WebApiAuthorize" Value="'AllowAnonymous'" />
        </If>
        <If Condition="Entity.WebApiAuthorize == 'Authorize'">
          <Set Name="System.WebApiAuthorize" Value="'Authorize'" />
        </If>
        <If Condition="Entity.WebApiAuthorize == 'AllowAnonymous'">
          <Set Name="System.WebApiAuthorize" Value="'AllowAnonymous'" />
        </If>
        <If Condition="System.WebApiAuthorize != null">
          <![CDATA[    [{{System.WebApiAuthorize}}]
]]>
        </If>
        <![CDATA[    public partial class {{Entity.Name}}Service : {{Entity.Name}}GrpcService.{{Entity.Name}}GrpcServiceBase
    {
        private readonly I{{Entity.Name}}Manager _manager;
        
        /// <summary>
        /// Parameterless constructor is explictly not supported.
        /// </summary>
        private {{Entity.Name}}Service() => throw new NotSupportedException();

        /// <summary>
        /// Initializes a new instance of the <see cref="{{Entity.Name}}Service"/> class.
        /// </summary>
        /// <param name="manager">The <see cref="I{{Entity.Name}}Manager"/>.</param>
        ]]>
        <Switch Value="Entity.GrpcServiceConstructor">
          <Case Value="'Private'"><![CDATA[private]]></Case>
          <Case Value="'Protected'"><![CDATA[protected]]></Case>
          <Default><![CDATA[public]]></Default>
        </Switch>
        <![CDATA[ {{Entity.Name}}Service(I{{Entity.Name}}Manager manager) => _manager = manager ?? throw new ArgumentNullException(nameof(manager));
]]>
        <Operation Condition="Operation.Grpc == true and Operation.OperationType != 'Patch'">
          <![CDATA[
        /// <summary>
]]>
          <If Condition="Operation.Text == null">
            <Then>
              <If Condition="Operation.OperationType == 'GetColl'">
                <![CDATA[        /// Gets the ]]>
                <If Condition="Operation.ReturnType == 'void'">
                  <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                  <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
                </If>
                <![CDATA[ collection entity that matches the selection criteria.
]]>
              </If>
              <If Condition="Operation.OperationType == 'Get'">
                <![CDATA[        /// Gets the ]]>
                <If Condition="Operation.ReturnType == 'void'">
                  <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                  <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
                </If>
                <![CDATA[ entity that matches the selection criteria.
]]>
              </If>
              <If Condition="Operation.OperationType == 'Create'">
                <![CDATA[        /// Creates the {{Entity.Name:ToSeeComments}} entity.
]]>
              </If>
              <If Condition="Operation.OperationType == 'Update'">
                <![CDATA[        /// Updates the ]]>
                <If Condition="Operation.ValueType == null">
                  <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                  <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
                </If>
                <![CDATA[ entity.
]]>
              </If>
              <If Condition="Operation.OperationType == 'Delete'">
                <![CDATA[        /// Deletes the ]]>
                <If Condition="Operation.ValueType == null">
                  <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                  <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
                </If>
                <![CDATA[ entity that matches the selection criteria.
]]>
              </If>
              <If Condition="Operation.OperationType == 'Custom'">
                <![CDATA[        /// ???
]]>
              </If>
            </Then>
            <Else>
              <![CDATA[        /// {{Operation.Text:ToComments}}.
]]>
            </Else>
          </If>
          <Set Name="System.ReturnType" Value="null" />
          <If Condition="Operation.OperationType == 'Get' or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
            <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="Entity.Name" Otherwise="Operation.ReturnType" />
          </If>
          <If Condition="Operation.OperationType == 'GetColl'">
            <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="'{{Entity.Name}}CollectionResult'" Otherwise="'{{Entity.Name}}CollectionResult'" />
          </If>
          <If Condition="Operation.OperationType == 'Delete'">
            <Set Name="System.ReturnType" Value="'Google.Protobuf.WellKnownTypes.Empty'" />
          </If>
          <If Condition="Operation.OperationType == 'Custom'">
            <Set Name="System.ReturnType" Condition="Operation.ReturnType == 'void'" Value="'Google.Protobuf.WellKnownTypes.Empty'" Otherwise="'Operation.ReturnType'" />
          </If>

          <![CDATA[        /// </summary>
        /// <param name="request">The <see cref="{{Entity.Name}}{{Operation.Name}}Request"/>.</param>
        /// <param name="context">The <see cref="ServerCallContext context"/>.</param>
        /// <returns>A <see cref="{{System.ReturnType}}"/>.</returns>
        public override Task<{{System.ReturnType}}> {{Operation.Name}}({{Entity.Name}}{{Operation.Name}}Request request, ServerCallContext context)
        {
            return new GrpcService<{{System.ReturnType}}>(context, async () =>
            {
                var __req = request ?? new {{Entity.Name}}{{Operation.Name}}Request();
                ]]>
          <If Condition="System.ReturnType != 'Google.Protobuf.WellKnownTypes.Empty'">
            <![CDATA[var __result = ]]>
          </If>
          <![CDATA[await _manager.{{Operation.Name}}Async(]]>
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
            <![CDATA[Transformers.{{Entity.Name}}.MapToSrce(__req.Value)!]]>
          </If>
          <Parameter>
            <If Condition="System.Index == 0">
              <Then>
                <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                  <![CDATA[, ]]>
                </If>
              </Then>
              <Else>
                <![CDATA[, ]]>
              </Else>
            </If>
            <Set Name="System.Type" Condition="Parameter.RefDataType == null" Value="Parameter.Type" Otherwise="Parameter.RefDataType" />
            <Switch Value="System.Type">
              <Case Value="'string'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'bool'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'int'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'uint'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'short'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'ushort'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'long'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'ulong'"><![CDATA[__req.{{Parameter.Name}}]]></Case>
              <Case Value="'DateTime'">
                <If Condition="Parameter.DateTimeTransform == 'DateOnly'">
                  <Then>
                    <![CDATA[Transformers.]]>
                    <If Condition="Parameter.Nullable == true">
                      <![CDATA[Nullable]]>
                    </If>
                    <![CDATA[DateTimeToDateOnly.ConvertToSrce(__req.{{Parameter.Name}})]]>
                  </Then>
                  <Else>
                    <![CDATA[Mapper.]]>
                    <If Condition="Parameter.Nullable == true">
                      <![CDATA[Nullable]]>
                    </If>
                    <![CDATA[DateTimeToTimestamp.ConvertToSrce(__req.{{Parameter.Name}})]]>
                  </Else>
                </If>
              </Case>
              <Case Value="'Guid'">
                <![CDATA[Transformers.]]>
                <If Condition="Parameter.Nullable == true">
                  <![CDATA[Nullable]]>
                </If>
                <![CDATA[GuidToStringConverter.ConvertToSrce(__req.{{Parameter.Name}})]]>
              </Case>
              <Case Value="'decimal'">
                <![CDATA[Transformers.]]>
                <If Condition="Parameter.Nullable == true">
                  <![CDATA[Nullable]]>
                </If>
                <![CDATA[DecimalToDecimalConverter.ConvertToSrce(__req.{{Parameter.Name}})]]>
              </Case>
              <Default><![CDATA[Transformers.{{Parameter.Type}}.MapToSrce(__req.{{Parameter.Name}})!]]></Default>
            </Switch>
          </Parameter>
          <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
            <If Condition="Operation.ParameterCount > 0">
              <![CDATA[, ]]>
            </If>
            <![CDATA[__req.Paging == null ? new Entities.PagingArgs() : Transformers.PagingArgsToPagingArgsConverter.ConvertToSrce(__req.Paging)]]>
          </If>
          <![CDATA[);
                return ]]>
          <If Condition="System.ReturnType == 'Google.Protobuf.WellKnownTypes.Empty'">
            <Then><![CDATA[new Google.Protobuf.WellKnownTypes.Empty();]]></Then>
            <Else><![CDATA[Transformers.{{System.ReturnType}}.MapToDest(__result!)!;]]></Else>
          </If>
          <![CDATA[
            }, operationType: OperationType.]]>
          <If Condition="Operation.WebApiOperationType != null">
            <Then><![CDATA[{{Operation.WebApiOperationType}}]]></Then>
            <Else>
              <If Condition="Operation.OperationType == 'Get'"><![CDATA[Read]]></If>
              <If Condition="Operation.OperationType == 'GetColl'"><![CDATA[Read]]></If>
              <If Condition="Operation.OperationType == 'Create'"><![CDATA[Create]]></If>
              <If Condition="Operation.OperationType == 'Update'"><![CDATA[Update]]></If>
              <If Condition="Operation.OperationType == 'Delete'"><![CDATA[Delete]]></If>
              <If Condition="Operation.OperationType == 'Custom'"><![CDATA[Unspecified]]></If>
            </Else>
          </If>
          <![CDATA[, statusCode: HttpStatusCode.]]>
          <If Condition="Operation.WebApiStatus != null">
            <Then>
              <![CDATA[{{Operation.WebApiStatus}}]]>
            </Then>
            <Else>
              <If Condition="Operation.OperationType == 'Get'"><![CDATA[OK]]></If>
              <If Condition="Operation.OperationType == 'GetColl'"><![CDATA[OK]]></If>
              <If Condition="Operation.OperationType == 'Create'"><![CDATA[Created]]></If>
              <If Condition="Operation.OperationType == 'Update'"><![CDATA[OK]]></If>
              <If Condition="Operation.OperationType == 'Delete'"><![CDATA[NoContent]]></If>
              <If Condition="Operation.OperationType == 'Custom'">
                <If Condition="Operation.ReturnType == 'void'">
                  <Then><![CDATA[NoContent]]></Then>
                  <Else><![CDATA[OK]]></Else>
                </If>
              </If>
            </Else>
          </If>
          <![CDATA[, alternateStatusCode: ]]>
          <If Condition="Operation.WebApiStatus != null">
            <Then>
              <![CDATA[HttpStatusCode.{{Operation.WebApiStatus}}]]>
            </Then>
            <Else>
              <If Condition="Operation.OperationType == 'Get'"><![CDATA[HttpStatusCode.NotFound]]></If>
              <If Condition="Operation.OperationType == 'GetColl'"><![CDATA[HttpStatusCode.NoContent]]></If>
              <If Condition="Operation.OperationType == 'Create'"><![CDATA[null]]></If>
              <If Condition="Operation.OperationType == 'Update'"><![CDATA[null]]></If>
              <If Condition="Operation.OperationType == 'Delete'"><![CDATA[null]]></If>
              <If Condition="Operation.OperationType == 'Custom'"><![CDATA[null]]></If>
            </Else>
          </If>
          <![CDATA[).ExecuteAsync();
        }
]]>
        </Operation>
        <![CDATA[    }
}

#pragma warning restore IDE0005
#nullable restore]]>
      </Entity>
    </Entity>
  </If>
</Template>