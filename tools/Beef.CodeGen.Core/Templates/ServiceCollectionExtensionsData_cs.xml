<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated" OutputFileName="{{Config.RefData}}ServiceCollectionExtensions.cs">
  <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using Microsoft.Extensions.DependencyInjection;

namespace {{Config.Company}}.{{Config.AppName}}.Business.Data
{
    /// <summary>
    /// Provides the generated <b>Data</b>-layer services.
    /// </summary>
    public static class {{Config.RefData}}ServiceCollectionsExtension
    {
        /// <summary>
        /// Adds the generated <b>Data</b>-layer services.
        /// </summary>
        /// <param name="services">The <see cref="IServiceCollection"/>.</param>
        /// <returns>The <see cref="IServiceCollection"/>.</returns>
        public static IServiceCollection AddGenerated{{Config.RefData}}DataServices(this IServiceCollection services)
        {]]>
  <Set Name="System.Close" Value="false" />
  <If Condition="Config.RefData != null">
    <![CDATA[
            return services.AddTransient<IReferenceDataData, ReferenceDataData>()]]>
    <Set Name="System.Close" Value="true" />
  </If>
  <Entity>
    <Set Name="System.EntityName" Value="Entity.Name" />
    <Set Name="System.EntityExclude" Value="false" />
    <If Condition="Entity.ExcludeIData == null and Entity.ExcludeAll == null and Entity.OperationCount == 0">
      <Set Name="System.EntityExclude" Value="true" />
    </If>
    <If Condition="Entity.ExcludeIData == true or Entity.ExcludeAll == true">
      <Set Name="System.EntityExclude" Value="true" />
    </If>
    <If Condition="System.EntityExclude == false">
      <Set Name="Entity.EntityName" Condition="Entity.GenericWithT != true" Value="Entity.Name" Otherwise="${{Entity.Name}}&lt;T&gt;" />
      <If Condition="System.Close == false">
        <Then>
          <![CDATA[
            return services]]>
        </Then>
        <Else>
          <![CDATA[
                           ]]>
        </Else>
      </If>
      <![CDATA[.AddScoped<I{{Entity.EntityName}}Data, {{Entity.EntityName}}Data>()]]>
    </If>
    <Set Name="System.Close" Value="true" />
  </Entity>
  <If Condition="System.Close">
    <![CDATA[;]]>
  </If>
  <![CDATA[
        }
    }
}

#pragma warning restore IDE0005
#nullable restore]]>
</Template>