<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated">
  <Entity>
    <Set Name="System.EntityName" Value="Entity.Name" />
    <Set Name="System.EntityExclude" Value="false" />
    <If Condition="Entity.ExcludeManager == null and Entity.ExcludeAll == null and Entity.OperationCount == 0">
      <Set Name="System.EntityExclude" Value="true" />
    </If>
    <If Condition="Entity.ExcludeManager == true or Entity.ExcludeAll == true">
      <Set Name="System.EntityExclude" Value="true" />
    </If>

    <Entity Condition="System.EntityExclude == false and Entity.Name == System.EntityName" OutputFileName="{{Entity.Name}}Manager.cs">
      <Set Name="Entity.EntityName" Condition="Entity.GenericWithT != true" Value="Entity.Name" Otherwise="${{Entity.Name}}&lt;T&gt;" />
      <Set Name="Entity.EntityCollectionName" Condition="Entity.GenericWithT != true" Value="${{Entity.Name}}Collection" Otherwise="${{Entity.Name}}Collection&lt;T&gt;" />
      <Set Name="Entity.EntityCollectionResultName" Condition="Entity.GenericWithT != true" Value="${{Entity.Name}}CollectionResult" Otherwise="${{Entity.Name}}CollectionResult&lt;T&gt;" />
      <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Entities;
using Beef.Validation;
]]>
      <If Condition="Config.EntityUsing == 'Business' or Config.EntityUsing == 'All'">
        <![CDATA[using {{Config.Company}}.{{Config.AppName}}.Business.Entities;
]]>
      </If>
      <If Condition="Config.EntityUsing == null or Config.EntityUsing == 'Common' or Config.EntityUsing == 'All'">
        <![CDATA[using {{Config.Company}}.{{Config.AppName}}.Common.Entities;
]]>
      </If>
      <Set Name="System.Validation" Value="false"/>
      <If Condition="Entity.Validator != null">
        <Set Name="System.Validation" Value="true"/>
      </If>
      <Operation Condition="Operation.ExcludeManager == false and Operation.ExcludeAll == false">
        <If Condition="Operation.Validator != null">
          <Set Name="System.Validation" Value="true"/>
        </If>
        <Parameter Condition="Parameter.Validator != null">
          <Set Name="System.Validation" Value="true"/>
        </Parameter>
      </Operation>
      <If Condition="System.Validation == true">
        <![CDATA[using {{Config.Company}}.{{Config.AppName}}.]]>
        <If Condition="Config.ValidatorLayer == null">
          <Then><![CDATA[Business]]></Then>
          <Else><![CDATA[{{Config.ValidatorLayer}}]]></Else>
        </If>
        <![CDATA[.Validation;
]]>
      </If>
      <![CDATA[using {{Config.Company}}.{{Config.AppName}}.Business.DataSvc;
]]>
      <If Condition="Config.RefDataNamespace != null">
        <![CDATA[using RefDataNamespace = {{Config.RefDataNamespace}};
]]>
      </If>
      <If Condition="Config.RefDataBusNamespace != null">
        <![CDATA[using RefDataBusNamespace = {{Config.RefDataBusNamespace}};
]]>
      </If>
      <![CDATA[
namespace {{Config.Company}}.{{Config.AppName}}.Business
{
    /// <summary>
    /// Provides the {{Entity.Name}} business functionality.
    /// </summary>
    public partial class {{Entity.Name}}Manager]]>
      <If Condition="Entity.GenericWithT == true"><![CDATA[<T>]]></If>
      <![CDATA[ : I{{Entity.Name}}Manager]]>
      <If Condition="Entity.GenericWithT == true"><![CDATA[<T>]]></If>
      <![CDATA[
    {
]]>
      <If Condition="Entity.ManagerExtensions == true">
        <!-- Private Funcs/Actions as Partial Methods do not support Async :-( -->
        <Set Name="System.EndRegion" Value="false"/>
        <Operation Condition="Operation.ExcludeManager == false and Operation.ExcludeAll == false and Operation.ManagerCustom == false and Operation.OperationType != 'Patch'">
          <If Condition="System.Index == 0">
            <Set Name="System.EndRegion" Value="true"/>
            <![CDATA[        #region Private
        #pragma warning disable CS0649 // Defaults to null by design; can be overridden in constructor.
]]>
          </If>
          <![CDATA[
]]>
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.ParameterCount > 0">
            <![CDATA[        private readonly Func<]]>
            <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.EntityName}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType}}]]></Else>
              </If>
            </If>
            <Parameter>
              <If Condition="System.Index > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[, ]]>
              </If>
              <![CDATA[{{Parameter.Type}}]]>
              <If Condition="Parameter.Nullable == true">
                <![CDATA[?]]>
              </If>
            </Parameter>
            <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
              <Then>
                <If Condition="Operation.ParameterCount > 0">
                  <![CDATA[, ]]>
                </If>
                <![CDATA[PagingArgs?, ]]>
              </Then>
              <Else>
                <If Condition="Operation.ParameterCount > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                  <![CDATA[, ]]>
                </If>
              </Else>
            </If>
            <![CDATA[Task>? {{Operation.PrivateName}}OnPreValidateAsync;
        private readonly Action<MultiValidator]]>
            <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[, {{Entity.EntityName}}]]></Then>
                <Else><![CDATA[, {{Operation.ReturnType}}]]></Else>
              </If>
            </If>
            <Parameter>
              <![CDATA[, {{Parameter.Type}}]]>
              <If Condition="Parameter.Nullable == true">
                <![CDATA[?]]>
              </If>
            </Parameter>
            <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
              <![CDATA[, PagingArgs?]]>
            </If>
            <![CDATA[>? {{Operation.PrivateName}}OnValidate;
]]>
          </If>
          <![CDATA[        private readonly Func<]]>
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
            <If Condition="Operation.ReturnType == 'void'">
              <Then><![CDATA[{{Entity.EntityName}}]]></Then>
              <Else><![CDATA[{{Operation.ReturnType}}]]></Else>
            </If>
          </If>
          <Parameter>
            <If Condition="System.Index > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <![CDATA[, ]]>
            </If>
            <![CDATA[{{Parameter.Type}}]]>
            <If Condition="Parameter.Nullable == true">
              <![CDATA[?]]>
            </If>
          </Parameter>
          <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
            <Then>
              <If Condition="Operation.ParameterCount > 0">
                <![CDATA[, ]]>
              </If>
              <![CDATA[PagingArgs?, ]]>
            </Then>
            <Else>
              <If Condition="Operation.ParameterCount > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[, ]]>
              </If>
            </Else>
          </If>
          <![CDATA[Task>? {{Operation.PrivateName}}OnBeforeAsync;
        private readonly Func<]]>
          <If Condition="Operation.OperationType == 'Get'">
            <If Condition="Operation.ReturnType == 'void'">
              <Then><![CDATA[{{Entity.EntityName}}?]]></Then>
              <Else><![CDATA[{{Operation.ReturnType}}?]]></Else>
            </If>
          </If>
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
            <If Condition="Operation.ReturnType == 'void'">
              <Then><![CDATA[{{Entity.EntityName}}]]></Then>
              <Else><![CDATA[{{Operation.ReturnType}}]]></Else>
            </If>
          </If>
          <If Condition="Operation.OperationType == 'GetColl'">
            <If Condition="Operation.ReturnType == 'void'">
              <Then><![CDATA[{{Entity.EntityCollectionResultName}}]]></Then>
              <Else><![CDATA[{{Operation.ReturnType}}CollectionResult]]></Else>
            </If>
          </If>
          <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
            <![CDATA[{{Operation.ReturnType}}]]>
          </If>
          <Parameter>
            <If Condition="System.Index == 0">
              <Then>
                <If Condition="Operation.OperationType != 'Delete' and Operation.OperationType != 'Custom'">
                  <![CDATA[, ]]>
                </If>
                <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
                  <![CDATA[, ]]>
                </If>
              </Then>
              <Else><![CDATA[, ]]></Else>
            </If>
            <![CDATA[{{Parameter.Type}}]]>
            <If Condition="Parameter.Nullable == true">
              <![CDATA[?]]>
            </If>
          </Parameter>
          <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
            <Then>
              <![CDATA[, PagingArgs?, ]]>
            </Then>
            <Else>
              <If Condition="Operation.ParameterCount > 0 or Operation.OperationType == 'GetColl' or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <Then><![CDATA[, ]]></Then>
                <Else>
                  <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
                    <![CDATA[, ]]>
                  </If>
                </Else>
              </If>
            </Else>
          </If>
          <![CDATA[Task>? {{Operation.PrivateName}}OnAfterAsync;
]]>
        </Operation>
        <If Condition="System.EndRegion == true">
          <![CDATA[
        #pragma warning restore CS0649
        #endregion

]]>
        </If>
      </If>

      <!-- Comments + Method Definition -->
      <Operation Condition="Operation.ExcludeManager == false and Operation.ExcludeAll == false and Operation.OperationType != 'Patch'">
        <If Condition="System.Index > 0">
          <![CDATA[
]]>
        </If>
        <![CDATA[        /// <summary>
]]>
        <If Condition="Operation.Text == null">
          <Then>
            <If Condition="Operation.OperationType == 'GetColl'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.EntityName:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ collection object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Get'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.EntityName:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Create'">
              <![CDATA[        /// Creates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.EntityName:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Update'">
              <![CDATA[        /// Updates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.EntityName:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Delete'">
              <![CDATA[        /// Deletes the {{Entity.EntityName:ToSeeComments}} object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Custom'">
              <![CDATA[        /// ???
]]>
            </If>
          </Then>
          <Else>
            <![CDATA[        /// {{Operation.Text:ToComments}}.
]]>
          </Else>
        </If>
        <![CDATA[        /// </summary>
]]>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[        /// <param name="value">The ]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.EntityName:ToSeeComments}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
          </If>
          <![CDATA[ object.</param>
]]>
        </If>
        <Parameter>
          <If Condition="Parameter.Text == null">
            <Then>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">???</param>
]]>
            </Then>
            <Else>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">The {{Parameter.Text:ToComments}}.</param>
]]>
            </Else>
          </If>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl'">
          <If Condition="Operation.PagingArgs == true">
            <![CDATA[        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
]]>
          </If>
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        /// <returns>A {{Entity.EntityCollectionResultName:ToSeeComments}}.</returns>
        public Task<{{Entity.EntityCollectionResultName}}> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        /// <returns>A <see cref="{{Operation.ReturnType}}CollectionResult"/>.</returns>
        public Task<{{Operation.ReturnType}}CollectionResult> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Get'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        /// <returns>The selected {{Entity.EntityName:ToSeeComments}} object where found; otherwise, <c>null</c>.</returns>
        public Task<{{Entity.EntityName}}?> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        /// <returns>The selected {{Operation.ReturnType:ToSeeComments}} object where found; otherwise, <c>null</c>.</returns>
        public Task<{{Operation.ReturnType}}?> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        /// <returns>A refreshed {{Entity.EntityName:ToSeeComments}} object.</returns>
        public Task<{{Entity.EntityName}}>]]>
            </Then>
            <Else>
              <![CDATA[        /// <returns>A refreshed {{Operation.ReturnType:ToSeeComments}} object.</returns>
        public Task<{{Operation.ReturnType}}>]]>
            </Else>
          </If>
          <![CDATA[ {{Operation.Name}}Async(]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.EntityName}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType}}]]></Else>
          </If>
          <![CDATA[ value]]>
        </If>
        <If Condition="Operation.OperationType == 'Delete'">
          <![CDATA[        public Task {{Operation.Name}}Async(]]>
        </If>
        <If Condition="Operation.OperationType == 'Custom'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then><![CDATA[        public Task {{Operation.Name}}Async(]]></Then>
            <Else>
              <![CDATA[        /// <returns>{{Operation.ReturnText:ToComments}}</returns>
        public Task<{{Operation.ReturnType}}> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <Parameter>
          <If Condition="System.Index == 0">
            <Then>
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[, ]]>
              </If>
            </Then>
            <Else>
              <![CDATA[, ]]>
            </Else>
          </If>
          <![CDATA[{{Parameter.Type}}]]>
          <If Condition="Parameter.Nullable == true">
            <![CDATA[?]]>
          </If>
          <![CDATA[ {{Parameter.ArgumentName}}]]>
          <If Condition="Parameter.Default != null">
            <![CDATA[= Parameter.Default]]>
          </If>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <If Condition="Operation.ParameterCount > 0">
            <![CDATA[, ]]>
          </If>
          <![CDATA[PagingArgs? paging]]>
        </If>
        <![CDATA[)
        {
]]>
        <!-- Code -->
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[            value.Validate(nameof(value)).Mandatory().Run().ThrowOnError();

]]>
        </If>
        <![CDATA[            return ManagerInvoker.Default.InvokeAsync(this, async () =>
            {
]]>
        <![CDATA[                ExecutionContext.Current.OperationType = OperationType.]]>
        <If Condition="Operation.WebApiOperationType != null">
          <Then><![CDATA[{{Operation.WebApiOperationType}}]]></Then>
          <Else>
            <If Condition="Operation.OperationType == 'Get'"><![CDATA[Read]]></If>
            <If Condition="Operation.OperationType == 'GetColl'"><![CDATA[Read]]></If>
            <If Condition="Operation.OperationType == 'Create'"><![CDATA[Create]]></If>
            <If Condition="Operation.OperationType == 'Update'"><![CDATA[Update]]></If>
            <If Condition="Operation.OperationType == 'Delete'"><![CDATA[Delete]]></If>
            <If Condition="Operation.OperationType == 'Custom'"><![CDATA[Unspecified]]></If>
          </Else>
        </If>
        <![CDATA[;
]]>
        <If Condition="Operation.AuthPermission != null">
          <Then>
            <![CDATA[                ExecutionContext.Current.IsAuthorized("{{Operation.AuthPermission}}", true);
]]>
          </Then>
          <Else>
            <If Condition="Operation.AuthRole != null">
              <Then>
                <![CDATA[                ExecutionContext.Current.IsInRole("{{Operation.AuthRole}}", true);
]]>
              </Then>
              <Else>
                <If Condition="Operation.AuthAction != null">
                  <Then>
                    <![CDATA[                ExecutionContext.Current.IsAuthorized(]]>
                    <If Condition="Operation.AuthEntity != null and Operation.AuthEntity != ''">
                      <Then><![CDATA["{{Operation.AuthEntity}}"]]></Then>
                      <Else><![CDATA[nameof({{Entity.EntityName}})]]></Else>
                    </If>
                    <![CDATA[, "{{Operation.AuthAction}}", true);
 ]]>
                  </Then>
                  <Else>
                    <If Condition="Entity.AuthRole != null">
                      <![CDATA[                ExecutionContext.Current.IsInRole("{{Entity.AuthRole}}", true);
]]>
                    </If>
                  </Else>
                </If>
              </Else>
            </If>
          </Else>
        </If>
        <Parameter Condition="Parameter.LayerPassing == 'ToManagerSet' or Parameter.LayerPassing == 'ToManagerCollSet'">
          <If Condition="Parameter.LayerPassing == 'ToManagerSet'">
            <![CDATA[                value.{{Parameter.Name}} = {{Parameter.ArgumentName}};
]]>
          </If>
          <If Condition="Parameter.LayerPassing == 'ToManagerCollSet'">
            <![CDATA[                value?.ForEach(__item => __item.{{Parameter.Name}} = {{Parameter.ArgumentName}});
]]>
          </If>
        </Parameter>
        <If Condition="Operation.ManagerCustom == false">
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.ParameterCount > 0">
            <![CDATA[                Cleaner.CleanUp(]]>
            <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <![CDATA[value]]>
            </If>
            <Parameter Condition="Parameter.RefDataType == null and Parameter.LayerPassing != 'ToManagerSet' and Parameter.LayerPassing != 'ToManagerCollSet'">
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <If Condition="System.Index == 0">
                  <![CDATA[, ]]>
                </If>
              </If>
              <If Condition="System.Index > 0">
                <![CDATA[, ]]>
              </If>
              <![CDATA[{{Parameter.ArgumentName}}]]>
            </Parameter>
            <![CDATA[);
]]>
            <If Condition="Entity.ManagerExtensions == true">
              <![CDATA[                if ({{Operation.PrivateName}}OnPreValidateAsync != null) await {{Operation.PrivateName}}OnPreValidateAsync(]]>
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[value]]>
              </If>
              <Parameter>
                <If Condition="System.Index > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                  <![CDATA[, ]]>
                </If>
                <![CDATA[{{Parameter.ArgumentName}}]]>
              </Parameter>
              <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
                <If Condition="Operation.ParameterCount > 0">
                  <![CDATA[, ]]>
                </If>
                <![CDATA[paging]]>
              </If>
              <![CDATA[).ConfigureAwait(false);

]]>
            </If>
            <![CDATA[                MultiValidator.Create()]]>
            <Set Name="System.NewLine" Value="false" />
            <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <Set Name="System.NewLine" Value="true" />
              <Set Name="System.ValueType" Condition="Operation.ValueType == null" Value="Entity.EntityName" Otherwise="Operation.ValueType" />
              <![CDATA[
                    .Add(value.Validate(nameof(value))]]>
              <If Condition="Operation.Validator == null">
                <Then>
                  <If Condition="Entity.Validator != null">
                    <![CDATA[.Entity({{Entity.Validator}}.Default)]]>
                  </If>
                </Then>
                <Else>
                  <If Condition="Operation.Validator != ''">
                    <![CDATA[.Entity({{Operation.Validator}}.Default)]]>
                  </If>
                </Else>
              </If>
              <If Condition="Operation.ValidatorFluent != null">
                <![CDATA[.{{Operation.ValidatorFluent}}]]>
              </If>
              <![CDATA[)]]>
            </If>
            <Parameter Condition="Parameter.IsMandatory == true or Parameter.Validator != null or Parameter.ValidatorFluent != null or Parameter.RefDataType != null">
              <![CDATA[
                    .Add({{Parameter.ArgumentName}}]]>
              <![CDATA[.Validate(nameof({{Parameter.ArgumentName}}))]]>
              <If Condition="Parameter.IsMandatory == true"><![CDATA[.Mandatory()]]></If>
              <If Condition="Parameter.RefDataType != null"><![CDATA[.IsValid()]]></If>
              <If Condition="Parameter.Validator != null"><![CDATA[.Entity({{Parameter.Validator}}.Default)]]></If>
              <If Condition="Parameter.ValidatorFluent != null"><![CDATA[.{{Parameter.ValidatorFluent}}]]></If>
              <![CDATA[)]]>
            </Parameter>
            <If Condition="Entity.ManagerExtensions == true">
              <Then>
                <![CDATA[
                    .Additional((__mv) => {{Operation.PrivateName}}OnValidate?.Invoke(__mv]]>
                <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                  <![CDATA[, value]]>
                </If>
                <Parameter>
                  <![CDATA[, {{Parameter.ArgumentName}}]]>
                </Parameter>
                <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
                  <![CDATA[, paging]]>
                </If>
                <![CDATA[))
]]>
              </Then>
              <Else>
                <![CDATA[
]]>
              </Else>
            </If>
            <![CDATA[                    .Run().ThrowOnError();

]]>
          </If>
        </If>
        <If Condition="Operation.ManagerCustom == false and Entity.ManagerExtensions == true">
          <![CDATA[                if ({{Operation.PrivateName}}OnBeforeAsync != null) await {{Operation.PrivateName}}OnBeforeAsync(]]>
          <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
            <![CDATA[value]]>
          </If>
          <Parameter>
            <If Condition="System.Index > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <![CDATA[, ]]>
            </If>
            <![CDATA[{{Parameter.ArgumentName}}]]>
          </Parameter>
          <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
            <If Condition="Operation.ParameterCount > 0">
              <![CDATA[, ]]>
            </If>
            <![CDATA[paging]]>
          </If>
          <![CDATA[).ConfigureAwait(false);
]]>
        </If>
        <![CDATA[                ]]>
        <Set Name="System.HasResult" Value="false" />
        <If Condition="Operation.OperationType == 'GetColl'">
          <Set Name="System.HasResult" Value="true" />
        </If>
        <If Condition="Operation.OperationType == 'Get' or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <Set Name="System.HasResult" Value="true" />
        </If>
        <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
          <Set Name="System.HasResult" Value="true" />
        </If>
        <If Condition="System.HasResult == true">
          <If Condition="Operation.ManagerCustom == true or Entity.ManagerExtensions == true">
            <Then>
              <![CDATA[var __result = ]]>
            </Then>
            <Else>
              <![CDATA[return Cleaner.Clean(]]>
            </Else>
          </If>
        </If>
        <If Condition="Operation.ManagerCustom == true">
          <Then>
            <If Condition="Operation.OperationType == 'GetColl'">
              <If Condition="Operation.ReturnType == 'void'">
                <Then>
                  <![CDATA[new {{Entity.EntityCollectionResultName}}();
                ]]>
                </Then>
                <Else>
                  <![CDATA[new {{Operation.ReturnType}}CollectionResult();
                ]]>
                </Else>
              </If>
            </If>
            <![CDATA[await {{Operation.Name}}OnImplementationAsync(]]>
            <Set Name="System.Comma" Value="false" />
            <If Condition="Operation.OperationType != 'Delete' and Operation.OperationType != 'Get' and Operation.OperationType != 'Custom'">
              <Then>
                <Set Name="System.Comma" Value="true" />
                <![CDATA[__result]]>
              </Then>
            </If>
            <Parameter Condition="Parameter.LayerPassing == 'All'">
              <If Condition="System.Comma == true or System.Index > 0">
                <![CDATA[, ]]>
              </If>
              <![CDATA[{{Parameter.ArgumentName}}]]>
              <Set Name="System.Comma" Value="false" />
            </Parameter>
            <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
              <If Condition="System.Comma == true or Operation.ParameterCount > 0">
                <![CDATA[, ]]>
              </If>
              <![CDATA[paging]]>
            </If>
            <![CDATA[).ConfigureAwait(false);
]]>
          </Then>
          <Else>
            <![CDATA[await {{Entity.Name}}DataSvc]]>
            <If Condition="Entity.GenericWithT == true"><![CDATA[<T>]]></If>
            <![CDATA[.{{Operation.Name}}Async(]]>
            <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
              <![CDATA[value]]>
            </If>
            <Parameter Condition="Parameter.LayerPassing == 'All'">
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <If Condition="System.Index == 0">
                  <![CDATA[, ]]>
                </If>
              </If>
              <If Condition="System.Index > 0">
                <![CDATA[, ]]>
              </If>
              <![CDATA[{{Parameter.ArgumentName}}]]>
            </Parameter>
            <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
              <If Condition="Operation.ParameterCount > 0">
                <![CDATA[, ]]>
              </If>
              <![CDATA[paging]]>
            </If>
            <![CDATA[).ConfigureAwait(false)]]>
            <If Condition="Operation.ManagerCustom == true or Entity.ManagerExtensions == true">
              <Then>
                <![CDATA[;
]]>
              </Then>
              <Else>
                <If Condition="System.HasResult == true">
                  <![CDATA[)]]>
                </If>
                <![CDATA[;
]]>
              </Else>
            </If>
            <If Condition="Entity.ManagerExtensions == true">
              <![CDATA[                if ({{Operation.PrivateName}}OnAfterAsync != null) await {{Operation.PrivateName}}OnAfterAsync(]]>
              <If Condition="Operation.OperationType == 'GetColl' or Operation.OperationType == 'Get' or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                <![CDATA[__result]]>
              </If>
              <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
                <![CDATA[__result]]>
              </If>
              <Parameter>
                <If Condition="System.Index == 0">
                  <Then>
                    <If Condition="Operation.OperationType == 'GetColl' or Operation.OperationType == 'Get' or Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
                      <![CDATA[, ]]>
                    </If>
                    <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
                      <![CDATA[, ]]>
                    </If>
                  </Then>
                  <Else>
                    <![CDATA[, ]]>
                  </Else>
                </If>
                <![CDATA[{{Parameter.ArgumentName}}]]>
              </Parameter>
              <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
                <If Condition="Operation.ParameterCount > 0">
                  <Then>
                    <![CDATA[, ]]>
                  </Then>
                  <Else>
                    <If Condition="Operation.OperationType != 'Delete' and Operation.OperationType != 'Custom'">
                      <![CDATA[, ]]>
                    </If>
                    <If Condition="Operation.OperationType == 'Custom' and Operation.ReturnType != 'void'">
                      <![CDATA[, ]]>
                    </If>
                  </Else>
                </If>
                <![CDATA[paging]]>
              </If>
              <![CDATA[).ConfigureAwait(false);
]]>
            </If>
          </Else>
        </If>
        <If Condition="Entity.ManagerExtensions == true and System.HasResult == true">
          <![CDATA[                Cleaner.CleanUp(__result);
                return __result;
]]>
        </If>
        <![CDATA[            }]]>
        <If Condition="Operation.ManagerTransaction == true">
          <![CDATA[, new BusinessInvokerArgs { IncludeTransactionScope = true }]]>
        </If>
        <![CDATA[);
        }
]]>
      </Operation>
      <![CDATA[    }
}

#pragma warning restore IDE0005
#nullable restore]]>
    </Entity>
  </Entity>
</Template>