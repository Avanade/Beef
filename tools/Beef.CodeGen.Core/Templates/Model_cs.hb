{{! Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef }}
/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options
#pragma warning disable CA2227, CA1819 // Collection/Array properties should be read only; ignored, as acceptable for a DTO.

{{! ===== Using ===== }}
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Beef.Entities;
{{#ifeq JsonSerializer 'Newtonsoft'}}
using Newtonsoft.Json;
{{/ifeq}}
{{#unless Parent.IsDataModel}}
  {{#if Parent.UsingNamespace1}}
using {{Parent.UsingNamespace1}};
  {{/if}}
  {{#if Parent.UsingNamespace2}}
using {{Parent.UsingNamespace2}};
  {{/if}}
  {{#if Parent.UsingNamespace3}}
using {{Parent.UsingNamespace3}};
  {{/if}}
  {{#ifeq Parent.EntityUsing 'Common' 'All'}}
    {{#ifeq EntityScope 'Business'}}
using {{Parent.Company}}.{{Parent.AppName}}.Common.Entities;
    {{/ifeq}}
  {{/ifeq}}
{{/unless}}

{{! ===== Class ===== }}
namespace {{Parent.Company}}.{{Parent.AppName}}.{{#if Parent.IsDataModel}}Business.Data.Model{{else}}{{Parent.EntityScope}}.Entities{{#ifval Namespace}}.{{Namespace}}{{/ifval}}{{/if}}
{
    /// <summary>
    /// Represents the {{{Text}}} {{#if Parent.IsDataModel}}model{{else}}entity{{/if}}.
    /// </summary>
{{#ifeq JsonSerializer 'Newtonsoft'}}
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
{{/ifeq}}
    public {{#if Abstract}}abstract {{/if}}partial class {{{EntityName}}}{{#ifval Inherits}} : {{Inherits}}{{/ifval}}{{#ifval Implements}}{{#ifval Inherits}}, {{else}} : {{/ifval}}{{Implements}}{{/ifval}}
    {
{{! ===== Properties ===== }}
{{#each CoreProperties}}
  {{#unless @first}}

  {{/unless}}
        /// <summary>
        /// {{{SummaryText}}}
        /// </summary>
    {{#ifeq Parent.JsonSerializer 'Newtonsoft'}}
      {{#unless IgnoreSerialization}}
        [JsonProperty("{{JsonName}}", DefaultValueHandling = {{#if EmitDefaultValue}}DefaultValueHandling.Include{{else}}DefaultValueHandling.Ignore{{/if}})]
      {{/unless}}
    {{/ifeq}}
    {{#unless IsDataModel}}
      {{#ifval Annotation1}}
        {{Annotation1}}
      {{/ifval}}
      {{#ifval Annotation2}}
        {{Annotation2}}
      {{/ifval}}
      {{#ifval Annotation3}}
        {{Annotation3}}
      {{/ifval}}
    {{/unless}}
        public {{PropertyType}} {{Name}} { get; set; }
{{/each}}
    }
{{! ===== Collection ===== }}
{{#if Collection}}

    /// <summary>
    /// Represents the {{{EntityNameSeeComments}}} collection.
    /// </summary>
    [SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1402:FileMayOnlyContainASingleClass", Justification = "Tightly coupled; OK.")]
    public partial class {{EntityCollectionName}} : {{{CollectionInherits}}} { }
{{/if}}
}

#pragma warning restore CA2227, CA1819
#pragma warning restore IDE0005
#nullable restore