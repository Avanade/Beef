<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated" OutputFileName="IReferenceDataData.cs">
  <Header>
    <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using System;
using System.Collections.Generic;
using System.Data;
using System.Text;
using System.Threading.Tasks;
]]>
    <If Condition="Config.RefDataNamespace != null">
      <![CDATA[using RefDataNamespace = {{Config.RefDataNamespace}};
]]>
    </If>
    <If Condition="Config.RefDataBusNamespace != null">
      <![CDATA[using RefDataBusNamespace = {{Config.RefDataBusNamespace}};
]]>
    </If>
    <![CDATA[
namespace {{Config.Company}}.{{Config.AppName}}.Business.Data
{
    /// <summary>
    /// Provides the <see cref="T:ReferenceData"/> database access.
    /// </summary>
    public partial interface IReferenceDataData
    {
]]>
  </Header>
  <Entity>
    <If Condition="Entity.RefDataType != null and Entity.ExcludeIData == false and Entity.ExcludeAll == false">
      <Set Name="Entity.EntityName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}" Otherwise="$RefDataNamespace.{{Entity.Name}}" />
      <Set Name="Entity.EntityCollectionName" Condition="Config.RefDataNamespace == null" Value="${{Entity.Name}}Collection" Otherwise="$RefDataNamespace.{{Entity.Name}}Collection" />
      <If Condition="System.Index > 0">
        <![CDATA[
]]>
      </If>
      <![CDATA[        /// <summary>
        /// Gets all the {{Entity.EntityName:ToSeeComments}} objects.
        /// </summary>
        /// <returns>A {{Entity.EntityCollectionName:ToSeeComments}}.</returns>
        Task<{{Entity.EntityCollectionName}}> {{Entity.Name}}GetAllAsync();
]]>
    </If>
  </Entity>
  <Footer>
    <![CDATA[    }
}

#pragma warning restore IDE0005
#nullable restore]]>
  </Footer>
</Template>