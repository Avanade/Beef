<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated">
  <Table>
    <Set Name="System.IsDeleted" Value="false" />
    <Set Name="System.OrgUnitId" Value="false" />
    <Set Name="System.MultiTenancy" Value="false"/>
    <Column>
      <Set Name="System.IsDeleted" Condition="Column.Name == 'IsDeleted'" Value="true" />
      <Set Name="System.OrgUnitId" Condition="Column.Name == 'OrgUnitId' and Column.IsPrimaryKey == false" Value="true" />
      <Set Name="System.MultiTenancy" Condition="Column.Name == 'TenantId' and Column.IsPrimaryKey == false" Value="true" />
      <Set Name="Column.SkipAsInternal" Condition="Column.Name == 'IsDeleted'" Value="true" />
      <Set Name="Column.SkipAsInternal" Condition="Column.Name == 'TenantId' and Column.IsPrimaryKey == false" Value="true" />
    </Column>

    <StoredProcedure Condition="StoredProcedure.Type == null or StoredProcedure.Type == 'GetAll'" OutputFileName="sp{{Table.Name:ToPascalCase}}{{StoredProcedure.Name}}.sql" OutputDirName="{{Table.Schema}}\Stored Procedures">
      <![CDATA[CREATE PROCEDURE [{{Table.Schema}}].[sp{{Table.Name:ToPascalCase}}{{StoredProcedure.Name}}]
]]>
      <Parameter>
        <If Condition="System.Index == 0">
          <Then><![CDATA[   ]]></Then>
          <Else><![CDATA[  ,]]></Else>
        </If>
        <![CDATA[]]>
        <Set Name="System.ColumnFound" Value="false"/>
        <Set Name="System.TableSysId" Value="Table.SysId"/>
        <Set Name="System.ParameterName" Value="Parameter.Name"/>
        <Set Name="System.ColumnName" Condition="Parameter.Column != null" Value="Parameter.Column" Otherwise="Parameter.Name"/>
        <Set Name="System.ParameterNullable" Value="Parameter.IsNullable"/>
        <Set Name="System.ParameterCollection" Value="Parameter.IsCollection"/>
        <Table Condition="Table.SysId == System.TableSysId">
          <Column Condition="Column.Name == System.ColumnName">
            <Set Name="System.ColumnFound" Value="true"/>
            <![CDATA[@{{System.ParameterName}}]]>
            <If Condition="System.ParameterCollection == false">
              <Then>
                <![CDATA[ AS {{Column.Type:ToUpperCase}}]]>
                <If Condition="Column.Type == 'nvarchar' or Column.Type == 'varchar' or Column.Type == 'nchar' or Column.Type == 'char'">
                  <If Condition="Column.Length > 0">
                    <Then><![CDATA[({{Column.Length}})]]></Then>
                    <Else><![CDATA[(MAX)]]></Else>
                  </If>
                </If>
                <If Condition="Column.Type == 'decimal' or Column.Type == 'numeric'">
                  <![CDATA[({{Column.Precision}}, {{Column.Scale}})]]>
                </If>
                <If Condition="Column.Type == 'time'">
                  <If Condition="Column.Scale > 0">
                    <Then><![CDATA[({{Column.Scale}})]]></Then>
                  </If>
                </If>
                <If Condition="System.ParameterNullable == true">
                  <![CDATA[ NULL = NULL]]>
                </If>
              </Then>
              <Else>
                <![CDATA[s AS [dbo].[udt{{Column.Type}}list] READONLY]]>
              </Else>
            </If>
          </Column>
        </Table>
        <If Condition="System.ColumnFound == false">
          <Exception Message="Parameter column '{{System.ColumnName}}' is not a known for table '{{Table.Name}}'."/>
        </If>
        <![CDATA[
]]>
      </Parameter>
      <If Condition="StoredProcedure.Paging == true">
        <If Condition="StoredProcedure.ParameterCount == 0">
          <Then><![CDATA[   ]]></Then>
          <Else><![CDATA[  ,]]></Else>
        </If>
        <![CDATA[@PagingSkip AS INT = 0
  ,@PagingTake AS INT = 250
  ,@PagingCount AS BIT = NULL
]]>
      </If>
      <![CDATA[AS
BEGIN
  /*
   * This is automatically generated; any changes will be lost. 
   */
 
  SET NOCOUNT ON;
]]>
      <If Condition="System.MultiTenancy == true">
        <![CDATA[
  -- Set the tenant identifier.
  DECLARE @TenantId UNIQUEIDENTIFIER
  SET @TenantId = dbo.fnGetTenantId(NULL)
]]>
      </If>
      <If Condition="Table.Permission != null or StoredProcedure.Permission != null">
        <![CDATA[
  -- Check user has permission.
  EXEC [Sec].[spCheckUserHasPermission] ]]>
        <If Condition="System.MultiTenancy == true">
          <Then><![CDATA[@TenantId]]></Then>
          <Else><![CDATA[NULL]]></Else>
        </If>
        <If Condition="StoredProcedure.Permission == null">
          <Then>
            <![CDATA[, NULL, '{{Table.Permission:ToUpperCase}}.Read'
]]>
          </Then>
          <Else>
            <![CDATA[, NULL, '{{StoredProcedure.Permission:ToUpperCase}}'
]]>
          </Else>
        </If>
      </If>
      <Parameter Condition="Parameter.IsCollection == true">
        <If Condition="System.Index == 0">
          <Then>
            <![CDATA[
  -- Check list counts.
]]>
          </Then>
          <Else>
            <![CDATA[
]]>
          </Else>
        </If>
        <![CDATA[  DECLARE @{{Parameter.Name}}sCount AS INT
  SET @{{Parameter.Name}}sCount = (SELECT COUNT(*) FROM @{{Parameter.Name}}s)
]]>
      </Parameter>
      <Execute Condition="Execute.Location == 'Before'">
        <If Condition="System.Index == 0">
          <![CDATA[
    -- Execute additional (pre) statements.
]]>
        </If>
        <![CDATA[    {{Execute.Statement}}
]]>
      </Execute>
      <![CDATA[
  -- Select the requested data.
  SELECT
        ]]>
      <Column Condition="Column.SkipAsInternal == false">
        <If Condition="System.Index > 0">
          <![CDATA[
       ,]]>
        </If>
        <![CDATA[[{{Table.Alias}}].[{{Column.Name}}]]]>
      </Column>
      <![CDATA[
]]>
      <If Condition="StoredProcedure.IntoTempTable == true">
        <![CDATA[    INTO [#{{Table.Alias}}]
]]>
      </If>
      <![CDATA[    FROM [{{Table.Schema}}].[{{Table.Name}}] AS [{{Table.Alias}}]]]>
      <If Condition="StoredProcedure.WithHints != null">
        <![CDATA[ WITH ({{StoredProcedure.WithHints}})]]>
      </If>
      <If Condition="Table.IsAView == false and System.OrgUnitId == true">
        <![CDATA[
    INNER JOIN [Sec].[fnGetUserOrgUnits]() AS orgunits ON [{{Table.Alias}}].[OrgUnitId] = [orgunits].[OrgUnitId]]]>
      </If>
      <Set Name="System.AndNeeded" Value="false" />
      <If Condition="Table.IsAView == false">
        <If Condition="System.MultiTenancy == true or System.IsDeleted == true">
          <![CDATA[
    WHERE ]]>
          <If Condition="System.MultiTenancy == true">
            <![CDATA[([{{Table.Alias}}].[TenantId] = @TenantId)]]>
            <Set Name="System.AndNeeded" Value="true" />
          </If>
          <If Condition="System.IsDeleted == true">
            <If Condition="System.AndNeeded == true">
              <![CDATA[
      AND ]]>
            </If>
            <Set Name="System.AndNeeded" Value="true" />
            <![CDATA[ISNULL([{{Table.Alias}}].[IsDeleted], 0) = 0]]>
          </If>
        </If>
        <If Condition="Table.UserRole != null and System.OrgUnitId == false">
          <If Condition="System.AndNeeded == true">
            <Then>
              <![CDATA[
      AND ]]>
            </Then>
            <Else>
              <![CDATA[
    WHERE ]]>
            </Else>
          </If>
          <Set Name="System.AndNeeded" Value="true" />
          <If Condition="System.IsOrgUnit == true">
            <![CDATA[(SELECT COUNT(*) FROM [Sec].[fnUserHasRoleName](NULL, '{{Table.UserRole:ToUpperCase}}.READ')) > 0]]>
          </If>
        </If>
      </If>
      <Parameter Condition="Parameter.IsCollection == false">
        <Set Name="System.ColumnName" Value="Parameter.Name"/>
        <If Condition="Parameter.Column != null">
          <Set Name="System.ColumnName" Value="Parameter.Column"/>
        </If>
        <If Condition="System.AndNeeded == true">
          <Then>
            <![CDATA[
      AND ]]>
          </Then>
          <Else>
            <![CDATA[
    WHERE ]]>
          </Else>
        </If>
        <Set Name="System.AndNeeded" Value="true" />
        <![CDATA[(]]>
        <If Condition="Parameter.IsNullable == true">
          <![CDATA[@{{Parameter.Name}} IS NULL OR ]]>
        </If>
        <If Condition="Parameter.TreatColumnNullAs != null">
          <![CDATA[ISNULL(]]>
        </If>
        <![CDATA[[{{Table.Alias}}].[{{System.ColumnName}}]]]>
        <If Condition="Parameter.TreatColumnNullAs != null">
          <![CDATA[, {{Parameter.TreatColumnNullAs}})]]>
        </If>
        <![CDATA[ ]]>
        <If Condition="Parameter.Operator == null">
          <Then><![CDATA[=]]></Then>
          <Else>
            <If Condition="Parameter.Operator:ToUpperCase == 'EQ'">
              <Then><![CDATA[=]]></Then>
              <Else>
                <If Condition="Parameter.Operator:ToUpperCase == 'NE'">
                  <Then><![CDATA[!=]]></Then>
                  <Else>
                    <If Condition="Parameter.Operator:ToUpperCase == 'LT'">
                      <Then><![CDATA[<]]></Then>
                      <Else>
                        <If Condition="Parameter.Operator:ToUpperCase == 'LE'">
                          <Then><![CDATA[<=]]></Then>
                          <Else>
                            <If Condition="Parameter.Operator:ToUpperCase == 'GT'">
                              <Then><![CDATA[>]]></Then>
                              <Else>
                                <If Condition="Parameter.Operator:ToUpperCase == 'GE'">
                                  <Then><![CDATA[>=]]></Then>
                                  <Else><![CDATA[{{Parameter.Operator:ToUpperCase}}]]></Else>
                                </If>
                              </Else>
                            </If>
                          </Else>
                        </If>
                      </Else>
                    </If>
                  </Else>
                </If>
              </Else>
            </If>
          </Else>
        </If>
        <![CDATA[ @{{Parameter.Name}})]]>
      </Parameter>
      <Parameter Condition="Parameter.IsCollection == true">
        <Set Name="System.ColumnName" Value="Parameter.Name"/>
        <If Condition="Parameter.Column != null">
          <Set Name="System.ColumnName" Value="Parameter.Column"/>
        </If>
        <If Condition="System.AndNeeded == true">
          <Then>
            <![CDATA[
      AND ]]>
          </Then>
          <Else>
            <![CDATA[
    WHERE ]]>
          </Else>
        </If>
        <Set Name="System.AndNeeded" Value="true" />
        <![CDATA[(@{{Parameter.Name}}sCount = 0 OR [{{Table.Alias}}].[{{System.ColumnName}}] IN (SELECT [Value] FROM @{{Parameter.Name}}s))]]>
      </Parameter>
      <Where>
        <If Condition="System.AndNeeded == true">
          <Then>
            <![CDATA[
      AND ]]>
          </Then>
          <Else>
            <![CDATA[
    WHERE ]]>
          </Else>
        </If>
        <![CDATA[{{Where.Statement}}]]>
        <Set Name="System.AndNeeded" Value="true" />
      </Where>
      <OrderBy>
        <If Condition="System.Index == 0">
          <Then>
            <![CDATA[
    ORDER BY ]]>
          </Then>
          <Else>
            <![CDATA[, ]]>
          </Else>
        </If>
        <![CDATA[[{{Table.Alias}}].[{{OrderBy.Name}}]]]>
        <If Condition="OrderBy.Order != null">
          <![CDATA[ {{OrderBy.Order:ToUpperCase}}]]>
        </If>
      </OrderBy>
      <If Condition="StoredProcedure.Paging == true">
        <![CDATA[
      OFFSET @PagingSkip ROWS FETCH NEXT @PagingTake ROWS ONLY]]>
      </If>
      <If Condition="StoredProcedure.IntoTempTable == true">
        <![CDATA[
        
  -- Select from the temp table.
  SELECT * FROM [#{{Table.Alias}}]]]>
      </If>
      <Execute Condition="Execute.Location == null or Execute.Location == 'After'">
        <If Condition="System.Index == 0">
          <![CDATA[

  -- Execute additional statements.]]>
        </If>
        <![CDATA[
  {{Execute.Statement}}]]>
      </Execute>
      <If Condition="StoredProcedure.Paging == true">
        <![CDATA[

  -- Return the full (all pages) row count.
  IF (@PagingCount IS NOT NULL AND @PagingCount = 1)
  BEGIN
    RETURN (SELECT COUNT(*)
      FROM [{{Table.Schema}}].[{{Table.Name}}] AS [{{Table.Alias}}]]]>
        <If Condition="Table.IsAView == false and System.OrgUnitId == true">
          <![CDATA[
        INNER JOIN [Sec].[fnGetUserOrgUnits]() AS orgunits ON [{{Table.Alias}}].[OrgUnitId] = [orgunits].[OrgUnitId]]]>
        </If>
        <Set Name="System.AndNeeded" Value="false" />
        <If Condition="Table.IsAView == false">
          <If Condition="System.MultiTenancy == true or System.IsDelete == true">
            <![CDATA[
      WHERE ]]>
            <If Condition="System.MultiTenancy == true">
              <![CDATA[([{{Table.Alias}}].[TenantId] = @TenantId)]]>
              <Set Name="System.AndNeeded" Value="true" />
            </If>
            <If Condition="System.IsDeleted == true">
              <If Condition="System.AndNeeded == true">
                <![CDATA[
        AND ]]>
              </If>
              <Set Name="System.AndNeeded" Value="true" />
              <![CDATA[ISNULL([{{Table.Alias}}].[IsDeleted], 0) = 0]]>
            </If>
          </If>
          <If Condition="Table.UserRole != null and System.OrgUnitId == false">
            <If Condition="System.AndNeeded == true">
              <Then>
                <![CDATA[
        AND ]]>
              </Then>
              <Else>
                <![CDATA[
      WHERE ]]>
              </Else>
            </If>
            <Set Name="System.AndNeeded" Value="true" />
            <If Condition="System.IsOrgUnit == true">
              <![CDATA[(SELECT COUNT(*) FROM [Sec].[fnUserHasRoleName](NULL, '{{Table.UserRole:ToUpperCase}}.READ')) > 0]]>
            </If>
          </If>
        </If>
        <Parameter Condition="Parameter.IsCollection == false">
          <Set Name="System.ColumnName" Value="Parameter.Name"/>
          <If Condition="Parameter.Column != null">
            <Set Name="System.ColumnName" Value="Parameter.Column"/>
          </If>
          <If Condition="System.AndNeeded == true">
            <Then>
              <![CDATA[
        AND ]]>
            </Then>
            <Else>
              <![CDATA[
      WHERE ]]>
            </Else>
          </If>
          <Set Name="System.AndNeeded" Value="true" />
          <![CDATA[(]]>
          <If Condition="Parameter.IsNullable == true">
            <![CDATA[@{{Parameter.Name}} IS NULL OR ]]>
          </If>
          <If Condition="Parameter.TreatColumnNullAs != null">
            <![CDATA[ISNULL(]]>
          </If>
          <![CDATA[[{{Table.Alias}}].[{{System.ColumnName}}]]]>
          <If Condition="Parameter.TreatColumnNullAs != null">
            <![CDATA[, {{Parameter.TreatColumnNullAs}})]]>
          </If>
          <![CDATA[ ]]>
          <If Condition="Parameter.Operator == null">
            <Then><![CDATA[=]]></Then>
            <Else>
              <If Condition="Parameter.Operator:ToUpperCase == 'EQ'">
                <Then><![CDATA[=]]></Then>
                <Else>
                  <If Condition="Parameter.Operator:ToUpperCase == 'NE'">
                    <Then><![CDATA[!=]]></Then>
                    <Else>
                      <If Condition="Parameter.Operator:ToUpperCase == 'LT'">
                        <Then><![CDATA[<]]></Then>
                        <Else>
                          <If Condition="Parameter.Operator:ToUpperCase == 'LE'">
                            <Then><![CDATA[<=]]></Then>
                            <Else>
                              <If Condition="Parameter.Operator:ToUpperCase == 'GT'">
                                <Then><![CDATA[>]]></Then>
                                <Else>
                                  <If Condition="Parameter.Operator:ToUpperCase == 'GE'">
                                    <Then><![CDATA[>=]]></Then>
                                    <Else><![CDATA[{{Parameter.Operator:ToUpperCase}}]]></Else>
                                  </If>
                                </Else>
                              </If>
                            </Else>
                          </If>
                        </Else>
                      </If>
                    </Else>
                  </If>
                </Else>
              </If>
            </Else>
          </If>
          <![CDATA[ @{{Parameter.Name}})]]>
        </Parameter>
        <Parameter Condition="Parameter.IsCollection == true">
          <Set Name="System.ColumnName" Value="Parameter.Name"/>
          <If Condition="Parameter.Column != null">
            <Set Name="System.ColumnName" Value="Parameter.Column"/>
          </If>
          <If Condition="System.AndNeeded == true">
            <Then>
              <![CDATA[
        AND ]]>
            </Then>
            <Else>
              <![CDATA[
      WHERE ]]>
            </Else>
          </If>
          <Set Name="System.AndNeeded" Value="true" />
          <![CDATA[(@{{Parameter.Name}}sCount = 0 OR [{{Table.Alias}}].[{{System.ColumnName}}] IN (SELECT [Value] FROM @{{Parameter.Name}}s))]]>
        </Parameter>
        <Where>
          <If Condition="System.AndNeeded == true">
            <Then>
              <![CDATA[
        AND ]]>
            </Then>
            <Else>
              <![CDATA[
      WHERE ]]>
            </Else>
          </If>
          <![CDATA[{{Where.Statement}}]]>
          <Set Name="System.AndNeeded" Value="true" />
        </Where>
        <![CDATA[)
  END]]>
      </If>
      <![CDATA[
END]]>
    </StoredProcedure>
  </Table>
</Template>