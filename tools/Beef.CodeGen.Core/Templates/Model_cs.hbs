{{! Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef }}
/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

{{! ===== Using ===== }}
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Beef.Entities;
{{#ifval RefDataType}}
using Beef.RefData.Model;
{{/ifval}}
{{#ifeq JsonSerializer 'Newtonsoft'}}
using Newtonsoft.Json;
{{/ifeq}}
{{#unless Root.IsDataModel}}
  {{#if Root.UsingNamespace1}}
using {{Root.UsingNamespace1}};
  {{/if}}
  {{#if Root.UsingNamespace2}}
using {{Root.UsingNamespace2}};
  {{/if}}
  {{#if Root.UsingNamespace3}}
using {{Root.UsingNamespace3}};
  {{/if}}
  {{#ifeq Root.EntityUsing 'Common' 'All'}}
    {{#ifeq EntityScope 'Business'}}
using {{Root.NamespaceCommon}}.Entities;
    {{/ifeq}}
  {{/ifeq}}
{{/unless}}

{{! ===== Class ===== }}
namespace {{#if Root.IsDataModel}}{{Root.NamespaceBusiness}}.Data.Model{{else}}{{#ifeq Root.EntityScope 'Common'}}{{Root.NamespaceCommon}}{{else}}{{Root.NamespaceBusiness}}{{/ifeq}}.Entities{{/if}}
{
    /// <summary>
    /// Represents the {{{Text}}} {{#if Root.IsDataModel}}model{{else}}entity{{/if}}.
    /// </summary>
{{#ifeq JsonSerializer 'Newtonsoft'}}
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
{{/ifeq}}
    public {{#if Abstract}}abstract {{/if}}partial class {{{EntityName}}}{{#ifval ModelInherits}} : {{{ModelInherits}}}{{/ifval}}{{#ifval ModelImplements}}{{#ifval ModelInherits}}, {{else}} : {{/ifval}}{{{ModelImplements}}}{{/ifval}}
    {
{{! ===== Properties ===== }}
{{#each CoreProperties}}
  {{#unless @first}}

  {{/unless}}
        /// <summary>
        /// {{{SummaryText}}}
        /// </summary>
    {{#ifeq Parent.JsonSerializer 'Newtonsoft'}}
      {{#unless SerializationIgnore}}
        [JsonProperty("{{JsonDataModelName}}", DefaultValueHandling = {{#if SerializationEmitDefault}}DefaultValueHandling.Include{{else}}DefaultValueHandling.Ignore{{/if}})]
      {{/unless}}
    {{/ifeq}}
    {{#unless IsDataModel}}
      {{#ifval Annotation1}}
        {{Annotation1}}
      {{/ifval}}
      {{#ifval Annotation2}}
        {{Annotation2}}
      {{/ifval}}
      {{#ifval Annotation3}}
        {{Annotation3}}
      {{/ifval}}
    {{/unless}}
        public {{{PrivateType}}} {{Name}} { get; set; }
{{/each}}
    }
{{! ===== Collection ===== }}
{{#if Collection}}

    /// <summary>
    /// Represents the {{{EntityNameSeeComments}}} collection.
    /// </summary>
    public partial class {{{EntityCollectionName}}} : {{{CollectionInherits}}} { }
{{/if}}
}

#pragma warning restore
#nullable restore