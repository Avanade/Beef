{{! Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef }}
/*
 * This file is automatically generated; any changes will be lost.
 */

{{#if Root.PreprocessorDirectives}}
#nullable enable
#pragma warning disable

{{/if}}
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using CoreEx.Configuration;
using CoreEx.Entities;
using CoreEx.Http;
using CoreEx.Json;
using Microsoft.Extensions.Logging;
using {{Root.NamespaceCommon}}.Entities;
{{#ifval Root.RefDataCommonNamespace}}
using RefDataNamespace = {{Root.RefDataCommonNamespace}};
{{/ifval}}

namespace {{Root.NamespaceCommon}}.Agents
{
    /// <summary>
    /// Defines the {{{EntityNameSeeComments}}} HTTP agent.
    /// </summary>
    public partial interface I{{Name}}Agent
    {
{{#each WebApiAgentOperations}}
  {{#unless @first}}

  {{/unless}}
        /// <summary>
        /// {{{SummaryText}}}
        /// </summary>
  {{#ifeq Type 'Patch'}}
        /// <param name="patchOption">The <see cref="HttpPatchOption"/>.</param>
  {{/ifeq}}
  {{#each Parameters}}
        /// <param name="{{ArgumentName}}">{{{WebApiSummaryText}}}</param>
  {{/each}}
        /// <param name="requestOptions">The optional <see cref="HttpRequestOptions"/>.</param>
        /// <param name="cancellationToken">The <see cref="CancellationToken"/>.</param>
        /// <returns>A <see cref="HttpResult"/>.</returns>
        {{{AgentOperationTaskReturnType}}} {{Name}}Async({{#ifeq Type 'Patch'}}HttpPatchOption patchOption, {{/ifeq}}{{#each Parameters}}{{{WebApiAgentParameterType}}} {{ArgumentName}}{{#ifor IsPagingArgs IsQueryArgs}} = null{{/ifor}}, {{/each}}HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default);
{{/each}}
    }
}{{#if Root.PreprocessorDirectives}}

#pragma warning restore
#nullable restore{{/if}}