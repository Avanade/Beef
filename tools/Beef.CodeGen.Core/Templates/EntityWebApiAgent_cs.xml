<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated">
  <Entity>
    <Set Name="System.EntityName" Value="Entity.Name" />
    <Set Name="System.EntityExclude" Value="false" />
    <If Condition="Entity.ExcludeWebApiAgent == null and Entity.ExcludeAll == null and Entity.OperationCount == 0">
      <Set Name="System.EntityExclude" Value="true" />
    </If>
    <If Condition="Entity.ExcludeWebApiAgent == true or Entity.ExcludeAll == true">
      <Set Name="System.EntityExclude" Value="true" />
    </If>

    <Entity Condition="System.EntityExclude == false and Entity.Name == System.EntityName and Entity.EntityScope == 'Common'" OutputFileName="{{Entity.Name}}Agent.cs">
      <Exception Condition="Entity.GenericWithT == true" Message="Entity '{{Entity.Name}}' specifies GenericWithT which is not supported for an Agent; use a non-generic class instead." />
      <Set Name="System.ServiceClientName" Value="Config.WebApiServiceClient"/>
      <If Condition="System.ServiceClientName == null or System.ServiceClientName == ''">
        <Set Name="System.ServiceClientName" Value="'ServiceClient'"/>
      </If>
      <![CDATA[/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading.Tasks;
using Beef;
using Beef.Entities;
using Beef.WebApi;
using Newtonsoft.Json.Linq;
using {{Config.Company}}.{{Config.AppName}}.Common.Entities;
using {{Config.Company}}.{{Config.AppName}}.Common.Agents.ServiceAgents;
]]>
      <If Condition="Config.RefDataNamespace != null">
        <![CDATA[using RefDataNamespace = {{Config.RefDataNamespace}};
]]>
      </If>
      <![CDATA[
namespace {{Config.Company}}.{{Config.AppName}}.Common.Agents
{
    /// <summary>
    /// Provides the {{Entity.Text:ToComments}} Web API agent.
    /// </summary>
    public partial class {{Entity.Name}}Agent : WebApiAgentBase, I{{Entity.Name}}ServiceAgent
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="{{Entity.Name}}Agent"/> class.
        /// </summary>
        /// <param name="httpClient">The <see cref="HttpClient"/> (where overridding the default value).</param>
        /// <param name="beforeRequest">The <see cref="Action{HttpRequestMessage}"/> to invoke before the <see cref="HttpRequestMessage">Http Request</see> is made (see <see cref="WebApiServiceAgentBase.BeforeRequest"/>).</param>
        public {{Entity.Name}}Agent(HttpClient? httpClient = null, Action<HttpRequestMessage>? beforeRequest = null)
        {
            {{Entity.Name}}ServiceAgent = Beef.Factory.Create<I{{Entity.Name}}ServiceAgent>(httpClient, beforeRequest);
        }
        
        /// <summary>
        /// Gets the underlyng <see cref="I{{Entity.Name}}ServiceAgent"/> instance.
        /// </summary>
        public I{{Entity.Name}}ServiceAgent {{Entity.Name}}ServiceAgent { get; private set; }
]]>
      <Operation Condition="Operation.ExcludeWebApiAgent == false and Operation.ExcludeAll == false">
        <![CDATA[
        /// <summary>
]]>
        <If Condition="Operation.Text == null">
          <Then>
            <If Condition="Operation.OperationType == 'GetColl'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ collection object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Get'">
              <![CDATA[        /// Gets the ]]>
              <If Condition="Operation.ReturnType == 'void'">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ReturnType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Create'">
              <![CDATA[        /// Creates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Update'">
              <![CDATA[        /// Updates the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Patch'">
              <![CDATA[        /// Patches the ]]>
              <If Condition="Operation.ValueType == null">
                <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
                <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
              </If>
              <![CDATA[ object.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Delete'">
              <![CDATA[        /// Deletes the {{Entity.Name:ToSeeComments}} object that matches the selection criteria.
]]>
            </If>
            <If Condition="Operation.OperationType == 'Custom'">
              <![CDATA[        /// ???
]]>
            </If>
          </Then>
          <Else>
            <![CDATA[        /// {{Operation.Text:ToComments}}.
]]>
          </Else>
        </If>
        <![CDATA[        /// </summary>
]]>
        <If Condition="Operation.OperationType == 'Patch'">
          <![CDATA[        /// <param name="patchOption">The <see cref="WebApiPatchOption"/>.</param>
        /// <param name="value">The JSON patch value.</param>
]]>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[        /// <param name="value">The ]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.Name:ToSeeComments}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType:ToSeeComments}}]]></Else>
          </If>
          <![CDATA[ object.</param>
]]>
        </If>
        <Parameter>
          <If Condition="Parameter.Text == null">
            <Then>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">???</param>
]]>
            </Then>
            <Else>
              <![CDATA[        /// <param name="{{Parameter.ArgumentName}}">The {{Parameter.Text:ToComments}}.</param>
]]>
            </Else>
          </If>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <![CDATA[        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
]]>
        </If>
        <![CDATA[        /// <param name="requestOptions">The optional <see cref="WebApiRequestOptions"/>.</param>
        /// <returns>A <see cref="WebApiAgentResult"/>.</returns>
]]>
        <If Condition="Operation.OperationType == 'GetColl'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then><![CDATA[        public Task<WebApiAgentResult<{{Entity.Name}}CollectionResult>> {{Operation.Name}}Async(]]></Then>
            <Else><![CDATA[        public Task<WebApiAgentResult<{{Operation.ReturnType}}CollectionResult>> {{Operation.Name}}Async(]]></Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Get'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<WebApiAgentResult<{{Entity.Name}}>> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        public Task<WebApiAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<WebApiAgentResult<{{Entity.Name}}>>]]>
            </Then>
            <Else>
              <![CDATA[        public Task<WebApiAgentResult<{{Operation.ReturnType}}>>]]>
            </Else>
          </If>
          <![CDATA[ {{Operation.Name}}Async(]]>
          <If Condition="Operation.ValueType == null">
            <Then><![CDATA[{{Entity.Name}}]]></Then>
            <Else><![CDATA[{{Operation.ValueType}}]]></Else>
          </If>
          <![CDATA[ value]]>
        </If>
        <If Condition="Operation.OperationType == 'Patch'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<WebApiAgentResult<{{Entity.Name}}>> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        public Task<WebApiAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
          <![CDATA[WebApiPatchOption patchOption, JToken value]]>
        </If>
        <If Condition="Operation.OperationType == 'Delete'">
          <![CDATA[        public Task<WebApiAgentResult> {{Operation.Name}}Async(]]>
        </If>
        <If Condition="Operation.OperationType == 'Custom'">
          <If Condition="Operation.ReturnType == 'void'">
            <Then>
              <![CDATA[        public Task<WebApiAgentResult> {{Operation.Name}}Async(]]>
            </Then>
            <Else>
              <![CDATA[        public Task<WebApiAgentResult<{{Operation.ReturnType}}>> {{Operation.Name}}Async(]]>
            </Else>
          </If>
        </If>
        <Parameter>
          <If Condition="System.Index == 0">
            <Then>
              <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.OperationType == 'Patch'">
                <![CDATA[, ]]>
              </If>
            </Then>
            <Else>
              <![CDATA[, ]]>
            </Else>
          </If>
          <![CDATA[{{Parameter.Type}}]]>
          <If Condition="Parameter.Nullable == true">
            <![CDATA[?]]>
          </If>
          <![CDATA[ {{Parameter.ArgumentName}}]]>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <If Condition="Operation.ParameterCount > 0">
            <![CDATA[, ]]>
          </If>
          <![CDATA[PagingArgs? paging = null]]>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.OperationType == 'Patch' or Operation.ParameterCount > 0 or Operation.PagingArgs == true">
          <![CDATA[, ]]>
        </If>
        <![CDATA[WebApiRequestOptions? requestOptions = null)
            => {{Entity.Name}}ServiceAgent.{{Operation.Name}}Async(]]>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update'">
          <![CDATA[Check.NotNull(value, nameof(value))]]>
        </If>
        <If Condition="Operation.OperationType == 'Patch'">
          <![CDATA[patchOption, value]]>
        </If>
        <Parameter>
          <If Condition="System.Index > 0 or Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.OperationType == 'Patch'">
            <![CDATA[, ]]>
          </If>
          <![CDATA[{{Parameter.ArgumentName}}]]>
        </Parameter>
        <If Condition="Operation.OperationType == 'GetColl' and Operation.PagingArgs == true">
          <If Condition="Operation.ParameterCount > 0">
            <![CDATA[, ]]>
          </If>
          <![CDATA[paging]]>
        </If>
        <If Condition="Operation.OperationType == 'Create' or Operation.OperationType == 'Update' or Operation.OperationType == 'Patch' or Operation.ParameterCount > 0 or Operation.PagingArgs == true">
          <![CDATA[, ]]>
        </If>
        <![CDATA[requestOptions);
]]>
      </Operation>
      <![CDATA[    }
}

#pragma warning restore IDE0005
#nullable restore]]>
    </Entity>
  </Entity>
</Template>