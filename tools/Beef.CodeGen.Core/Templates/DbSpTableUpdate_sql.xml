<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Avanade. Licensed under the MIT License. See https://github.com/Avanade/Beef -->
<Template OutputGenDirName="Generated">
  <Table>
    <Set Name="System.IsDeleted" Value="false" />
    <Set Name="System.OrgUnitId" Value="false" />
    <Set Name="System.MultiTenancy" Value="false"/>
    <Set Name="System.RowVersion" Value="false" />
    <Set Name="System.IsAudited" Value="false" />
    <Column>
      <Set Name="System.IsDeleted" Condition="Column.Name == 'IsDeleted'" Value="true" />
      <Set Name="System.OrgUnitId" Condition="Column.Name == 'OrgUnitId' and Column.IsPrimaryKey == false" Value="true" />
      <Set Name="System.MultiTenancy" Condition="Column.Name == 'TenantId' and Column.IsPrimaryKey == false" Value="true" />
      <Set Name="System.RowVersion" Condition="Column.Name == 'RowVersion'" Value="true" />
      <Set Name="System.IsAudited" Condition="Column.Name == 'CreatedBy' or Column.Name == 'CreatedDate' or Column.Name == 'UpdatedBy' or Column.Name == 'UpdatedDate'" Value="true" />
      <Set Name="Column.SkipAsInternal" Condition="Column.Name == 'IsDeleted'" Value="true" />
      <Set Name="Column.SkipAsInternal" Condition="Column.Name == 'TenantId' and Column.IsPrimaryKey == false" Value="true" />
    </Column>

    <StoredProcedure Condition="StoredProcedure.Type == 'Update'" OutputFileName="sp{{Table.Name:ToPascalCase}}{{StoredProcedure.Name}}.sql" OutputDirName="{{Table.Schema}}\Stored Procedures">
      <![CDATA[CREATE PROCEDURE [{{Table.Schema}}].[sp{{Table.Name}}{{StoredProcedure.Name}}]
   ]]>
      <Column Condition="Column.SkipAsInternal == false and Column.Name != 'CreatedDate' and Column.Name != 'CreatedBy' and Column.IsComputed == false">
        <If Condition="System.Index > 0">
          <![CDATA[
  ,]]>
        </If>
        <![CDATA[@{{Column.Name}} AS {{Column.Type:ToUpperCase}}]]>
        <If Condition="Column.Type == 'nvarchar' or Column.Type == 'varchar' or Column.Type == 'nchar' or Column.Type == 'char'">
          <If Condition="Column.Length > 0">
            <Then><![CDATA[({{Column.Length}})]]></Then>
            <Else><![CDATA[(MAX)]]></Else>
          </If>
        </If>
        <If Condition="Column.Type == 'decimal' or Column.Type == 'numeric'">
          <![CDATA[({{Column.Precision}}, {{Column.Scale}})]]>
        </If>
        <If Condition="Column.Type == 'time'">
          <If Condition="Column.Scale > 0">
            <Then><![CDATA[({{Column.Scale}})]]></Then>
          </If>
        </If>
        <If Condition="Column.IsNullable == true">
          <![CDATA[ NULL]]>
        </If>
        <If Condition="Column.IsPrimaryKey == false">
          <If Condition="Column.IsNullable == true">
            <![CDATA[ = NULL]]>
          </If>
        </If>
      </Column>
      <Parameter>
        <![CDATA[
  ,@{{Parameter.Name}}]]>
        <Set Name="System.ColumnFound" Value="false"/>
        <Set Name="System.TableSysId" Value="Table.SysId"/>
        <Set Name="System.ParameterName" Value="Parameter.Name"/>
        <Set Name="System.ParameterSqlType" Value="Parameter.SqlType" />
        <Set Name="System.ColumnName" Condition="Parameter.Column != null" Value="Parameter.Column" Otherwise="Parameter.Name"/>
        <Set Name="System.ParameterNullable" Value="Parameter.IsNullable"/>
        <Set Name="System.ParameterCollection" Value="Parameter.IsCollection"/>
        <Table Condition="Table.SysId == System.TableSysId">
          <Column Condition="Column.Name == System.ColumnName">
            <Set Name="System.ColumnFound" Value="true"/>
            <Set Name="Column.ParameterName" Value="System.ParameterName"/>
            <If Condition="System.ParameterCollection == false">
              <Then>
                <If Condition="System.ParameterSqlType != null">
                  <Then><![CDATA[ AS {{System.ParameterSqlType}}]]></Then>
                  <Else>
                    <![CDATA[ AS {{Column.Type:ToUpperCase}}]]>
                    <If Condition="Column.Type == 'nvarchar' or Column.Type == 'varchar' or Column.Type == 'nchar' or Column.Type == 'char'">
                      <If Condition="Column.Length > 0">
                        <Then><![CDATA[({{Column.Length}})]]></Then>
                        <Else><![CDATA[(MAX)]]></Else>
                      </If>
                    </If>
                    <If Condition="Column.Type == 'decimal' or Column.Type == 'numeric'">
                      <![CDATA[({{Column.Precision}}, {{Column.Scale}})]]>
                    </If>
                    <If Condition="Column.Type == 'time'">
                      <If Condition="Column.Scale > 0">
                        <Then><![CDATA[({{Column.Scale}})]]></Then>
                      </If>
                    </If>
                    <If Condition="System.ParameterNullable == true">
                      <![CDATA[ NULL = NULL]]>
                    </If>
                  </Else>
                </If>
              </Then>
              <Else>
                <![CDATA[s AS [dbo].[udt{{Column.Type}}list] READONLY]]>
              </Else>
            </If>
          </Column>
        </Table>
        <If Condition="System.ColumnFound == false">
          <If Condition="Parameter.SqlType != null">
            <Then><![CDATA[ AS {{Parameter.SqlType}}]]></Then>
            <Else>
              <Exception Message="Parameter column '{{System.ColumnName}}' is not a known for table '{{Table.Name}}'."/>
            </Else>
          </If>
        </If>
      </Parameter>
      <![CDATA[
  ,@ReselectRecord AS BIT = 0
AS
BEGIN
  /*
   * This file is automatically generated; any changes will be lost. 
   */
 
  SET NOCOUNT ON;
  
  BEGIN TRY
    -- Wrap in a transaction.
    BEGIN TRANSACTION
]]>
      <If Condition="System.MultiTenancy == true">
        <![CDATA[
    -- Set the tenant identifier.
    DECLARE @TenantId uniqueidentifier
    SET @TenantId = dbo.fnGetTenantId(NULL)
]]>
      </If>
      <If Condition="Table.Permission != null or StoredProcedure.Permission != null">
        <![CDATA[
    -- Check user has permission.
    EXEC [Sec].[spCheckUserHasPermission] ]]>
        <If Condition="System.MultiTenancy == true">
          <Then><![CDATA[@TenantId]]></Then>
          <Else><![CDATA[NULL]]></Else>
        </If>
        <If Condition="StoredProcedure.Permission == null">
          <Then>
            <![CDATA[, NULL, '{{Table.Permission:ToUpperCase}}.WRITE']]>
          </Then>
          <Else>
            <![CDATA[, NULL, '{{StoredProcedure.Permission:ToUpperCase}}']]>
          </Else>
        </If>
        <If Condition="System.OrgUnitId == true">
          <![CDATA[, @OrgUnitId]]>
        </If>
        <![CDATA[
]]>
      </If>
      <If Condition="System.IsAudited == true">
        <![CDATA[
    -- Set audit details, etc.
    EXEC @UpdatedDate = fnGetTimestamp @UpdatedDate
    EXEC @UpdatedBy = fnGetUsername @UpdatedBy
]]>
      </If>
      <![CDATA[
    -- Check exists.
]]>
      <If Condition="System.RowVersion == true">
        <Then>
          <![CDATA[    DECLARE @PrevRowVersion BINARY(8)
    SET @PrevRowVersion = (SELECT TOP 1 x.[RowVersion] FROM [{{Table.Schema}}].[{{Table.Name}}] AS x WHERE ]]>
        </Then>
        <Else>
          <![CDATA[    DECLARE @PrevRowCount INT
    SET @PrevRowCount = (SELECT COUNT(*) FROM [{{Table.Schema}}].[{{Table.Name}}] AS x WHERE ]]>
        </Else>
      </If>
      <Column Condition="Column.IsPrimaryKey == true or Column.Name == 'IsDeleted'">
        <If Condition="System.Index > 0"><![CDATA[ AND ]]></If>
        <If Condition="Column.Name == 'IsDeleted'">
          <Then><![CDATA[ISNULL(x.[{{Column.Name}}], 0) = 0]]></Then>
          <Else><![CDATA[x.[{{Column.Name}}] = @{{Column.Name}}]]></Else>
        </If>
      </Column>
      <Where>
        <![CDATA[ AND x.{{Where.Statement}}]]>
      </Where>
      <If Condition="System.MultiTenancy == true">
        <![CDATA[ AND x.[TenantId] = @TenantId]]>
      </If>
      <![CDATA[)
]]>
      <If Condition="System.RowVersion == true">
        <Then>
          <![CDATA[    IF @PrevRowVersion IS NULL]]>
        </Then>
        <Else>
          <![CDATA[    IF @PrevRowCount <> 1]]>
        </Else>
      </If>
      <![CDATA[
    BEGIN
      EXEC spThrowNotFoundException
    END
]]>
      <If Condition="System.OrgUnitId == true">
        <![CDATA[    
    -- Check user has permission to org unit.
]]>
        <![CDATA[    DECLARE @CurrOrgUnitId UNIQUEIDENTIFIER = NULL
    SET @CurrOrgUnitId = (SELECT TOP 1 [x].[OrgUnitId] FROM [{{Table.Schema}}].[{{Table.Name}}] AS x 
      WHERE ]]>
        <Column Condition="Column.IsPrimaryKey == true or Column.Name == 'IsDeleted'">
          <If Condition="System.Index > 0"><![CDATA[ AND ]]></If>
          <If Condition="Column.Name == 'IsDeleted'">
            <Then><![CDATA[x.[{{Column.Name}}] = 0]]></Then>
            <Else><![CDATA[x.[{{Column.Name}}] = @{{Column.Name}}]]></Else>
          </If>
        </Column>
        <If Condition="System.MultiTenancy == true">
          <![CDATA[ AND x.[TenantId] = @TenantId]]>
        </If>
        <![CDATA[)

    IF (@CurrOrgUnitId IS NOT NULL AND (SELECT COUNT(*) FROM [Sec].[fnGetUserOrgUnits]() AS orgunits WHERE orgunits.OrgUnitId = @CurrOrgUnitId) = 0)
    BEGIN
      EXEC [dbo].[spThrowAuthorizationException]
    END
]]>
      </If>
      <If Condition="System.RowVersion == true">
        <![CDATA[
    -- Check concurrency (where provided).
    IF @RowVersion IS NULL OR @PrevRowVersion <> @RowVersion
    BEGIN
      EXEC spThrowConcurrencyException
    END
]]>
      </If>
      <Execute Condition="Execute.Location == 'Before'">
        <If Condition="System.Index == 0">
          <![CDATA[
    -- Execute additional (pre) statements.
]]>
        </If>
        <![CDATA[    {{Execute.Statement}}
]]>
      </Execute>
      <![CDATA[
    -- Update the record.
    UPDATE [{{Table.Schema}}].[{{Table.Name}}]]]>
    <If Condition="StoredProcedure.WithHints != null">
      <![CDATA[ WITH ({{StoredProcedure.WithHints}})]]>
    </If>
    <![CDATA[ SET
         ]]>
      <Column Condition="Column.SkipAsInternal == false and Column.IsPrimaryKey == false and Column.Name != 'CreatedDate' and Column.Name != 'CreatedBy' and Column.Name != 'RowVersion' and Column.IsComputed == false">
        <If Condition="System.Index > 0">
          <![CDATA[
        ,]]>
        </If>
        <![CDATA[[{{Column.Name}}] = @{{Column.Name}}]]>
      </Column>
      <![CDATA[
      WHERE ]]>
      <Column Condition="Column.IsPrimaryKey == true">
        <If Condition="System.Index > 0">
          <![CDATA[
        AND ]]>
        </If>
        <![CDATA[[{{Column.Name}}] = @{{Column.Name}}]]>
      </Column>
      <If Condition="System.MultiTenancy == true">
        <![CDATA[
         AND [TenantId] = @TenantId]]>
      </If>
      <Where>
        <![CDATA[
        AND {{Where.Statement}}]]>
      </Where>
      <Execute Condition="Execute.Location == null or Execute.Location == 'After'">
        <If Condition="System.Index == 0">
          <![CDATA[

    -- Execute additional statements.]]>
        </If>
        <![CDATA[
    {{Execute.Statement}}]]>
      </Execute>
      <![CDATA[

    -- Commit the transaction.
    COMMIT TRANSACTION
  END TRY
  BEGIN CATCH
    -- Rollback transaction and rethrow error.
    IF @@TRANCOUNT > 0
      ROLLBACK TRANSACTION;

    THROW;
  END CATCH
  
  -- Reselect record.
  IF @ReselectRecord = 1
  BEGIN
    EXEC ]]>
  <If Condition="StoredProcedure.ReselectStatement == null">
    <Then>
      <![CDATA[[{{Table.Schema}}].[sp{{Table.Name}}Get] ]]>
      <Column Condition="Column.IsPrimaryKey == true">
        <If Condition="System.Index > 0"><![CDATA[, ]]></If>
        <![CDATA[@{{Column.Name}}]]>
      </Column>
    </Then>
    <Else>
      <![CDATA[{{StoredProcedure.ReselectStatement}}]]>
    </Else>
  </If>
  <![CDATA[
  END
END]]>
    </StoredProcedure>
  </Table>
</Template>