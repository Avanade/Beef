/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using CoreEx.Entities;
using CoreEx.Entities.Extended;
using CoreEx.RefData;
using Newtonsoft.Json;
using RefDataNamespace = My.Hr.Business.Entities;

namespace My.Hr.Business.Entities
{
    /// <summary>
    /// Represents the Termination Detail entity.
    /// </summary>
    public partial class TerminationDetail : EntityBase<TerminationDetail>
    {
        private DateTime _date;
        private string? _reasonSid;
        private string? _reasonText;

        /// <summary>
        /// Gets or sets the Date.
        /// </summary>
        public DateTime Date { get => _date; set => SetValue(ref _date, value, transform: DateTimeTransform.DateOnly); }

        /// <summary>
        /// Gets or sets the <see cref="Reason"/> using the underlying Serialization Identifier (SID).
        /// </summary>
        public string? ReasonSid { get => _reasonSid; set => SetValue(ref _reasonSid, value); }

        /// <summary>
        /// Gets the corresponding <see cref="Reason"/> text (read-only where selected).
        /// </summary>
        public string? ReasonText => RefDataNamespace.TerminationReason.GetRefDataText(_reasonSid);

        /// <summary>
        /// Gets or sets the Reason (see <see cref="RefDataNamespace.TerminationReason"/>).
        /// </summary>
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public RefDataNamespace.TerminationReason? Reason { get => _reasonSid; set => SetValue(ref _reasonSid, value); }

        /// <inheritdoc/>
        protected override IEnumerable<IPropertyValue> GetPropertyValues()
        {
            yield return CreateProperty(Date, v => Date = v);
            yield return CreateProperty(ReasonSid, v => ReasonSid = v);
        }
    }
}

#pragma warning restore
#nullable restore