/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using CoreEx;
using CoreEx.RefData;
using My.Hr.Business.Data;
using RefDataNamespace = My.Hr.Business.Entities;

namespace My.Hr.Business.DataSvc
{
    /// <summary>
    /// Provides the <b>ReferenceData</b> data services.
    /// </summary>
    internal partial class ReferenceDataDataSvc : IReferenceDataDataSvc
    {
        private readonly IReferenceDataData _data;

        /// <summary>
        /// Initializes a new instance of the <see cref="ReferenceDataDataSvc" /> class.
        /// </summary>
        /// <param name="data">The <see cref="IReferenceDataData"/>.</param>
        public ReferenceDataDataSvc(IReferenceDataData data) { _data = data ?? throw new ArgumentNullException(nameof(data)); ReferenceDataDataSvcCtor(); }

        partial void ReferenceDataDataSvcCtor(); // Enables the ReferenceDataDataSvc constructor to be extended.

        /// <inheritdoc/>
        public async Task<IReferenceDataCollection> GetAsync(Type type, CancellationToken cancellationToken = default) => type switch
        {
            Type _ when type == typeof(RefDataNamespace.Gender) => await _data.GenderGetAllAsync(cancellationToken).ConfigureAwait(false),
            Type _ when type == typeof(RefDataNamespace.TerminationReason) => await _data.TerminationReasonGetAllAsync(cancellationToken).ConfigureAwait(false),
            Type _ when type == typeof(RefDataNamespace.RelationshipType) => await _data.RelationshipTypeGetAllAsync(cancellationToken).ConfigureAwait(false),
            Type _ when type == typeof(RefDataNamespace.USState) => await _data.USStateGetAllAsync(cancellationToken).ConfigureAwait(false),
            Type _ when type == typeof(RefDataNamespace.PerformanceOutcome) => await _data.PerformanceOutcomeGetAllAsync(cancellationToken).ConfigureAwait(false),
            _ => throw new InvalidOperationException($"Type {type.FullName} is not a known {nameof(IReferenceData)}.")
        };
    }
}

#pragma warning restore
#nullable restore