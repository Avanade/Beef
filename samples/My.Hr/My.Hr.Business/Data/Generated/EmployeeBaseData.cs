/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005 // Using directive is unnecessary; are required depending on code-gen options

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Data.Database;
using Beef.Data.EntityFrameworkCore;
using Beef.Entities;
using Beef.Mapper;
using Beef.Mapper.Converters;
using My.Hr.Common.Entities;
using RefDataNamespace = My.Hr.Common.Entities;

namespace My.Hr.Business.Data
{
    /// <summary>
    /// Provides the <see cref="EmployeeBase"/> data access.
    /// </summary>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1052:Static holder types should be Static or NotInheritable", Justification = "Will not always appear static depending on code-gen options")]
    public partial class EmployeeBaseData
    {

        /// <summary>
        /// Provides the <see cref="EmployeeBase"/> property and database column mapping.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1034:Nested types should not be visible", Justification = "By design; as there is a direct relationship")]
        public partial class DbMapper : DatabaseMapper<EmployeeBase, DbMapper>
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="DbMapper"/> class.
            /// </summary>
            public DbMapper()
            {
                Property(s => s.Id, "EmployeeId").SetUniqueKey(true);
                Property(s => s.Email);
                Property(s => s.FirstName);
                Property(s => s.LastName);
                Property(s => s.GenderSid, "GenderCode");
                Property(s => s.Birthday);
                Property(s => s.StartDate);
                Property(s => s.Termination).SetMapper(TerminationDetailData.DbMapper.Default!);
                Property(s => s.PhoneNo);
                AddStandardProperties();
                DbMapperCtor();
            }
            
            partial void DbMapperCtor(); // Enables the DbMapper constructor to be extended.
        }

        /// <summary>
        /// Provides the <see cref="EmployeeBase"/> and Entity Framework <see cref="EfModel.Employee"/> property mapping.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1034:Nested types should not be visible", Justification = "By design; as there is a direct relationship")]
        public partial class EfMapper : EfDbMapper<EmployeeBase, EfModel.Employee, EfMapper>
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="EfMapper"/> class.
            /// </summary>
            public EfMapper()
            {
                Property(s => s.Id, d => d.EmployeeId).SetUniqueKey(true);
                Property(s => s.Email, d => d.Email);
                Property(s => s.FirstName, d => d.FirstName);
                Property(s => s.LastName, d => d.LastName);
                Property(s => s.GenderSid, d => d.GenderCode);
                Property(s => s.Birthday, d => d.Birthday);
                Property(s => s.StartDate, d => d.StartDate);
                Property(s => s.PhoneNo, d => d.PhoneNo);
                AddStandardProperties();
                EfMapperCtor();
            }
            
            partial void EfMapperCtor(); // Enables the EfMapper constructor to be extended.
        }
    }
}

#pragma warning restore IDE0005
#nullable restore