<?xml version="1.0" encoding="utf-8" ?>
<CodeGeneration RefDatabaseSchema="Ref" xmlns="http://schemas.beef.com/codegen/2015/01/database" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://github.com/Avanade/Beef/raw/master/tools/Beef.CodeGen.Core/Schema/codegen.table.xsd">
  <!-- Reference data tables/models. -->
  <Table Name="Gender" Schema="Ref" EfModel="true" />
  <Table Name="TerminationReason" Schema="Ref" EfModel="true" />
  <Table Name="RelationshipType" Schema="Ref" EfModel="true" />
  <Table Name="USState" Schema="Ref" EfModel="true" />

  <!-- References the Employee table to infer the underlying schema, then creates stored procedures as configured:
       - Each then specifies an additional SQL statement to be executed after the primary action (as defined by Type). 
       - The Create and Update also specify the required SQL User-Defined Type (UDT) for the data to be passed into the stored procedure. -->
  <Table Name="Employee" Schema="Hr">
    <StoredProcedure Name="Get" Type="Get">
      <Execute Statement="EXEC [Hr].[spEmergencyContactGetByEmployeeId] @EmployeeId" />
    </StoredProcedure>
    <StoredProcedure Name="Create" Type="Create">
      <Parameter Name="EmergencyContactList" SqlType="[Hr].[udtEmergencyContactList] READONLY" />
      <Execute Statement="EXEC [Hr].[spEmergencyContactMerge] @EmployeeId, @EmergencyContactList" />
    </StoredProcedure>
    <StoredProcedure Name="Update" Type="Update">
      <Parameter Name="EmergencyContactList" SqlType="[Hr].[udtEmergencyContactList] READONLY" />
      <Execute Statement="EXEC [Hr].[spEmergencyContactMerge] @EmployeeId, @EmergencyContactList" />
    </StoredProcedure>
    <StoredProcedure Name="Delete" Type="Delete">
      <Execute Statement="DELETE FROM [Hr].[EmergencyContact] WHERE [EmployeeId] = @EmployeeId" />
      <Execute Statement="DELETE FROM [Hr].[PerformanceReview] WHERE [EmployeeId] = @EmployeeId" />
    </StoredProcedure>
  </Table>

  <!-- References the EmergencyContact table to infer the underlying schema, then creates stored procedures as configured: 
       - Specifies need for a SQL User-Defined Type (UDT) and corresponding .NET (C#) Table-Valued Parameter (TVP) excluding the EmployeeId column (as this is the merge key).
       - GetByEmployeeId will get all rows using the specified Parameter - the characteristics of the Parameter are inferred from the underlying schema.
       - Merge will perform a SQL merge using the specified Parameter. -->
  <Table Name="EmergencyContact" Schema="Hr" Udt="true" Tvp="EmergencyContact" UdtExcludeColumns="EmployeeId">
    <StoredProcedure Name="GetByEmployeeId" Type="GetAll">
      <Parameter Name="EmployeeId" />
    </StoredProcedure>
    <StoredProcedure Name="Merge" Type="Merge">
      <Parameter Name="EmployeeId" />
    </StoredProcedure>
  </Table>

  <!-- References the Employee table to infer the underlying schema, and creates .NET (C#) model for the selected columns only. -->
  <Table Name="Employee" Schema="Hr" EfModel="true" IncludeColumns="EmployeeId, Email, FirstName, LastName, GenderCode, Birthday, StartDate, TerminationDate, TerminationReasonCode, PhoneNo" />
  
  <!-- PerformanceReview table and related referenace data. -->
  <Table Name="PerformanceReview" Schema="Hr" EfModel="true" />
  <Table Name="PerformanceOutcome" Schema="Ref" EfModel="true" />
</CodeGeneration>