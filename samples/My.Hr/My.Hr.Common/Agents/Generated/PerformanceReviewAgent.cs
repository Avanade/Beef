/*
 * This file is automatically generated; any changes will be lost.
 */

namespace My.Hr.Common.Agents;

/// <summary>
/// Provides the <see cref="PerformanceReview"/> HTTP agent.
/// </summary>
/// <param name="client">The underlying <see cref="HttpClient"/>.</param>
/// <param name="jsonSerializer">The optional <see cref="IJsonSerializer"/>.</param>
/// <param name="executionContext">The optional <see cref="CoreEx.ExecutionContext"/>.</param>
public partial class PerformanceReviewAgent(HttpClient client, IJsonSerializer? jsonSerializer = null, CoreEx.ExecutionContext? executionContext = null) : TypedHttpClientBase<PerformanceReviewAgent>(client, jsonSerializer, executionContext), IPerformanceReviewAgent
{
    /// <inheritdoc/>
    public Task<HttpResult<PerformanceReview?>> GetAsync(Guid id, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync<PerformanceReview?>("reviews/{id}", requestOptions, [new HttpArg<Guid>("id", id)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<PerformanceReviewCollectionResult>> GetByEmployeeIdAsync(Guid employeeId, PagingArgs? paging = null, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync<PerformanceReviewCollectionResult>("employees/{employeeId}/reviews", requestOptions.IncludePaging(paging), [new HttpArg<Guid>("employeeId", employeeId)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<PerformanceReview>> CreateAsync(PerformanceReview value, Guid employeeId, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => PostAsync<PerformanceReview, PerformanceReview>("employees/{employeeId}/reviews", value, requestOptions, [new HttpArg<Guid>("employeeId", employeeId)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<PerformanceReview>> UpdateAsync(PerformanceReview value, Guid id, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => PutAsync<PerformanceReview, PerformanceReview>("reviews/{id}", value, requestOptions, [new HttpArg<Guid>("id", id)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<PerformanceReview>> PatchAsync(HttpPatchOption patchOption, string value, Guid id, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => PatchAsync<PerformanceReview>("reviews/{id}", patchOption, value, requestOptions, [new HttpArg<Guid>("id", id)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult> DeleteAsync(Guid id, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => DeleteAsync("reviews/{id}", requestOptions, [new HttpArg<Guid>("id", id)], cancellationToken);
}