/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace MyEf.Hr.Business.Entities;

/// <summary>
/// Represents the Relationship Type entity.
/// </summary>
public partial class RelationshipType : ReferenceDataBaseEx<Guid, RelationshipType>
{
    /// <summary>
    /// An implicit cast from an <see cref="IIdentifier.Id"> to <see cref="RelationshipType"/>.
    /// </summary>
    /// <param name="id">The <see cref="IIdentifier.Id">.</param>
    /// <returns>The corresponding <see cref="RelationshipType"/>.</returns>
    public static implicit operator RelationshipType?(Guid id) => ConvertFromId(id);

    /// <summary>
    /// An implicit cast from a <see cref="IReferenceData.Code"> to <see cref="RelationshipType"/>.
    /// </summary>
    /// <param name="code">The <see cref="IReferenceData.Code">.</param>
    /// <returns>The corresponding <see cref="RelationshipType"/>.</returns>
    public static implicit operator RelationshipType?(string? code) => ConvertFromCode(code);
}

/// <summary>
/// Represents the <see cref="RelationshipType"/> collection.
/// </summary>
public partial class RelationshipTypeCollection : ReferenceDataCollectionBase<Guid, RelationshipType, RelationshipTypeCollection>
{
    /// <summary>
    /// Initializes a new instance of the <see cref="RelationshipTypeCollection"/> class.
    /// </summary>
    public RelationshipTypeCollection() { }

    /// <summary>
    /// Initializes a new instance of the <see cref="RelationshipTypeCollection"/> class with <paramref name="items"/> to add.
    /// </summary>
    /// <param name="items">The items to add.</param>
    public RelationshipTypeCollection(IEnumerable<RelationshipType> items) => AddRange(items);
}

#pragma warning restore
#nullable restore