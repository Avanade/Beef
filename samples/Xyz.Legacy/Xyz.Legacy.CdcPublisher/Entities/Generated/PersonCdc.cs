/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using Beef.Data.Database.Cdc;
using Beef.Entities;
using Beef.Mapper;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace Xyz.Legacy.CdcPublisher.Entities
{
    /// <summary>
    /// Represents the CDC model for the root (parent) database table 'Legacy.Person'.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class PersonCdc : ITableKey, IETag, IGlobalIdentifier, ICdcLinkIdentifierMapping
    {
        /// <summary>
        /// Gets or sets the <see cref="IGlobalIdentifier.GlobalId"/>.
        /// </summary>
        [JsonProperty("globalId", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? GlobalId { get; set; }

        /// <summary>
        /// Gets or sets the 'Person Id' (Legacy.Person.PersonId) column value.
        /// </summary>
        public int PersonId { get; set; }

        /// <summary>
        /// Gets or sets the 'First Name' (Legacy.Person.FirstName) column value.
        /// </summary>
        [JsonProperty("firstName", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? FirstName { get; set; }

        /// <summary>
        /// Gets or sets the 'Last Name' (Legacy.Person.LastName) column value.
        /// </summary>
        [JsonProperty("lastName", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? LastName { get; set; }

        /// <summary>
        /// Gets or sets the 'Phone' (Legacy.Person.Phone) column value.
        /// </summary>
        [JsonProperty("phone", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? Phone { get; set; }

        /// <summary>
        /// Gets or sets the 'Email' (Legacy.Person.Email) column value.
        /// </summary>
        [JsonProperty("email", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public string? Email { get; set; }

        /// <summary>
        /// Gets or sets the 'Active' (Legacy.Person.Active) column value.
        /// </summary>
        [JsonProperty("active", DefaultValueHandling = DefaultValueHandling.Ignore)]
        public bool? Active { get; set; }

        /// <summary>
        /// Gets or sets the related (one-to-many) <see cref="PersonCdc.PersonAddressCollection"/> (database table 'Legacy.PersonAddress').
        /// </summary>
        [JsonProperty("addresses", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [MapperIgnore()]
        public PersonCdc.PersonAddressCdcCollection? Addresses { get; set; }

        /// <summary>
        /// Gets or sets the entity tag (calculated as a JSON serialized hash value).
        /// </summary>
        [JsonProperty("etag", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [MapperIgnore()]
        public string? ETag { get; set; }

        /// <summary>
        /// <inheritdoc/>
        /// </summary>
        [MapperIgnore()]
        public UniqueKey UniqueKey => new UniqueKey(PersonId);

        /// <summary>
        /// <inheritdoc/>
        /// </summary>
        [MapperIgnore()]
        public string[] UniqueKeyProperties => new string[] { nameof(PersonId) };

        /// <summary>
        /// Gets or sets the 'Person Id' <i>primary key</i> (Legacy.Person.PersonId) column value (from the actual database table primary key; not from the change-data-capture source).
        /// </summary>
        /// <remarks>Will have a <c>default</c> value when the record no longer exists within the database (i.e. has been physically deleted).</remarks>
        public int TableKey_PersonId { get; set; }

        /// <summary>
        /// <inheritdoc/>
        /// </summary>
        /// <remarks><inheritdoc/></remarks>
        public UniqueKey TableKey => new UniqueKey(TableKey_PersonId);

        /// <summary>
        /// Link any new global identifiers.
        /// </summary>
        /// <param name="coll">The <see cref="CdcValueIdentifierMappingCollection"/>.</param>
        /// <param name="idGen">The <see cref="IStringIdentifierGenerator"/>.</param>
        public async Task LinkIdentifierMappingsAsync(CdcValueIdentifierMappingCollection coll, IStringIdentifierGenerator idGen)
        {
            coll.AddAsync(GlobalId == default, async () => new CdcValueIdentifierMapping { Value = this, Property = nameof(GlobalId), Schema = "Legacy", Table = "Person", Key = this.CreateIdentifierMappingKey(), GlobalId = await idGen.GenerateIdentifierAsync<PersonCdc>().ConfigureAwait(false) });
            Addresses?.ForEach(async item => await item.LinkIdentifierMappingsAsync(coll, idGen).ConfigureAwait(false));
        }

        /// <summary>
        /// Re-link the new global identifiers.
        /// </summary>
        /// <param name="coll">The <see cref="CdcValueIdentifierMappingCollection"/>.</param>
        public void RelinkIdentifierMappings(CdcValueIdentifierMappingCollection coll)
        {
            coll.Invoke(GlobalId == default, () => GlobalId = coll.GetGlobalId(this, nameof(GlobalId)));
            Addresses?.ForEach(item => item.RelinkIdentifierMappings(coll));
        }

        #region PersonAddressCdc

        /// <summary>
        /// Represents the CDC model for the related (child) database table 'Legacy.PersonAddress' (known uniquely as 'PersonAddress').
        /// </summary>
        [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
        public partial class PersonAddressCdc : IUniqueKey
        {
            /// <summary>
            /// Gets or sets the 'Id' (Legacy.PersonAddress.Id) column value.
            /// </summary>
            [JsonProperty("id", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public int Id { get; set; }

            /// <summary>
            /// Gets or sets the 'Person Id' (Legacy.PersonAddress.PersonId) column value.
            /// </summary>
            [JsonProperty("personId", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public int PersonId { get; set; }

            /// <summary>
            /// Gets or sets the 'Address Type Id' (Legacy.PersonAddress.AddressTypeId) column value.
            /// </summary>
            [JsonProperty("addressTypeId", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public int AddressTypeId { get; set; }

            /// <summary>
            /// Gets or sets the 'Street1' (Legacy.PersonAddress.Street1) column value.
            /// </summary>
            [JsonProperty("street1", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public string? Street1 { get; set; }

            /// <summary>
            /// Gets or sets the 'Street2' (Legacy.PersonAddress.Street2) column value.
            /// </summary>
            [JsonProperty("street2", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public string? Street2 { get; set; }

            /// <summary>
            /// Gets or sets the 'City' (Legacy.PersonAddress.City) column value.
            /// </summary>
            [JsonProperty("city", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public string? City { get; set; }

            /// <summary>
            /// Gets or sets the 'State' (Legacy.PersonAddress.State) column value.
            /// </summary>
            [JsonProperty("state", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public string? State { get; set; }

            /// <summary>
            /// Gets or sets the 'Postal Zip Code' (Legacy.PersonAddress.PostalZipCode) column value.
            /// </summary>
            [JsonProperty("postalZipCode", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public string? PostalZipCode { get; set; }

            /// <summary>
            /// Gets or sets the 'Code' column value (join table 'Legacy.AddressType').
            /// </summary>
            [JsonProperty("code", DefaultValueHandling = DefaultValueHandling.Ignore)]
            public string? Code { get; set; }

            /// <summary>
            /// <inheritdoc/>
            /// </summary>
            [MapperIgnore()]
            public UniqueKey UniqueKey => new UniqueKey(Id);

            /// <summary>
            /// <inheritdoc/>
            /// </summary>
            [MapperIgnore()]
            public string[] UniqueKeyProperties => new string[] { nameof(Id) };

            /// <summary>
            /// Link any new global identifiers.
            /// </summary>
            /// <param name="coll">The <see cref="CdcValueIdentifierMappingCollection"/>.</param>
            /// <param name="idGen">The <see cref="IStringIdentifierGenerator"/>.</param>
            public async Task LinkIdentifierMappingsAsync(CdcValueIdentifierMappingCollection coll, IStringIdentifierGenerator idGen)
            {
            }

            /// <summary>
            /// Re-link the new global identifiers.
            /// </summary>
            /// <param name="coll">The <see cref="CdcValueIdentifierMappingCollection"/>.</param>
            public void RelinkIdentifierMappings(CdcValueIdentifierMappingCollection coll)
            {
            }
        }

        /// <summary>
        /// Represents the CDC model for the related (child) database table collection 'Legacy.PersonAddress'.
        /// </summary>
        public partial class PersonAddressCdcCollection : List<PersonAddressCdc> { }

        #endregion
    }
}

#pragma warning restore
#nullable restore