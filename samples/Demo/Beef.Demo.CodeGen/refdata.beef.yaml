refDataNamespace: Beef.Demo.Common.Entities
refDataWebApiRoute: api/v1/demo/ref
refDataDefaultMapperConverter: ReferenceDataInt32IdConverter
entities:
  # A Get/Create/Update/Delete are not required unless specific CRUD operations are required.
- { name: Country, refDataType: Guid, collection: true, webApiRoutePrefix: api/v1/demo/ref/countries, autoImplement: Database, databaseSchema: Ref }
- { name: USState, refDataType: Guid, collection: true, webApiRoutePrefix: api/v1/demo/ref/usStates, autoImplement: Database, databaseSchema: Ref }
- { name: Gender, refDataType: Guid, collection: true, webApiRoutePrefix: api/v1/demo/ref/genders, get: true, create: true, update: true, autoImplement: Database, databaseSchema: Ref,
    properties: [
      { name: AlternateName, type: string },
      { name: TripCode, text: Trip OData Code, type: string, refDataMapping: true, immutable: true, serializationIgnore: true }
    ],
    consts: [
      { name: Female, value: F },
      { name: Male, value: M }
    ]
  }
- { name: EyeColor, refDataType: Guid, collection: true, webApiRoutePrefix: api/v1/demo/ref/eyeColors, autoImplement: EntityFramework, databaseSchema: Ref, entityFrameworkModel: EfModel.EyeColor }
- { name: PowerSource, refDataType: Guid, collection: true, webApiRoutePrefix: api/v1/demo/ref/powerSources, autoImplement: Cosmos, cosmosContainerId: RefData, cosmosModel: Model.PowerSource, dataModel: true,
    properties: [
      { name: AdditionalInfo, type: string }
    ]
  }
- { name: Company, refDataType: Guid, collection: true, webApiRoutePrefix: api/v1/demo/ref/companies,
    properties: [
      { name: ExternalCode, type: string, refDataMapping: true, immutable: true }
    ]
  }