/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable IDE0005, IDE0044 // Using directive is unnecessary; are required depending on code-gen options

using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Entities;
using Beef.Demo.Business.Data;
using Beef.Demo.Common.Entities;
using RefDataNamespace = Beef.Demo.Common.Entities;

namespace Beef.Demo.Business.DataSvc
{
    /// <summary>
    /// Provides the Gender data repository services.
    /// </summary>
    public partial class GenderDataSvc : IGenderDataSvc
    {
        private readonly IGenderData _data;

        /// <summary>
        /// Parameterless constructor is explictly not supported.
        /// </summary>
        private GenderDataSvc() => throw new NotSupportedException();

        /// <summary>
        /// Initializes a new instance of the <see cref="GenderDataSvc"/> class.
        /// </summary>
        /// <param name="data">The <see cref="IGenderData"/>.</param>
        public GenderDataSvc(IGenderData data) { _data = data ?? throw new ArgumentNullException(nameof(data)); GenderDataSvcCtor(); }

        /// <summary>
        /// Enables additional functionality to be added to the constructor.
        /// </summary>
        partial void GenderDataSvcCtor();

        /// <summary>
        /// Gets the <see cref="Gender"/> object that matches the selection criteria.
        /// </summary>
        /// <param name="id">The <see cref="Gender"/> identifier.</param>
        /// <returns>The selected <see cref="Gender"/> object where found; otherwise, <c>null</c>.</returns>
        public Task<Gender?> GetAsync(Guid id)
        {
            return DataSvcInvoker.Default.InvokeAsync(typeof(GenderDataSvc), async () => 
            {
                var __key = new UniqueKey(id);
                if (ExecutionContext.Current.TryGetCacheValue(__key, out Gender __val))
                    return __val;

                var __result = await _data.GetAsync(id).ConfigureAwait(false);
                ExecutionContext.Current.CacheSet(__key, __result!);
                return __result;
            });
        }

        /// <summary>
        /// Creates the <see cref="Gender"/> object.
        /// </summary>
        /// <param name="value">The <see cref="Gender"/> object.</param>
        /// <returns>A refreshed <see cref="Gender"/> object.</returns>
        public Task<Gender> CreateAsync(Gender value)
        {
            return DataSvcInvoker.Default.InvokeAsync(typeof(GenderDataSvc), async () => 
            {
                var __result = await _data.CreateAsync(Check.NotNull(value, nameof(value))).ConfigureAwait(false);
                await Beef.Events.Event.PublishValueEventAsync(__result, $"Demo.Gender.{__result.Id}", "Create").ConfigureAwait(false);
                ExecutionContext.Current.CacheSet(__result.UniqueKey, __result);
                return __result;
            });
        }

        /// <summary>
        /// Updates the <see cref="Gender"/> object.
        /// </summary>
        /// <param name="value">The <see cref="Gender"/> object.</param>
        /// <returns>A refreshed <see cref="Gender"/> object.</returns>
        public Task<Gender> UpdateAsync(Gender value)
        {
            return DataSvcInvoker.Default.InvokeAsync(typeof(GenderDataSvc), async () => 
            {
                var __result = await _data.UpdateAsync(Check.NotNull(value, nameof(value))).ConfigureAwait(false);
                await Beef.Events.Event.PublishValueEventAsync(__result, $"Demo.Gender.{__result.Id}", "Update").ConfigureAwait(false);
                ExecutionContext.Current.CacheSet(__result.UniqueKey, __result);
                return __result;
            });
        }
    }
}

#pragma warning restore IDE0005, IDE0044
#nullable restore