/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using Beef;
using Beef.Business;
using Beef.Entities;
using Beef.Mapper;
using Beef.Mapper.Converters;
using Beef.WebApi;
using Beef.Demo.Common.Entities;
using RefDataNamespace = Beef.Demo.Common.Entities;

namespace Beef.Demo.Business.Data
{
    /// <summary>
    /// Provides the <see cref="PostalInfo"/> data access.
    /// </summary>
    public partial class PostalInfoData : IPostalInfoData
    {
        private readonly IZippoAgent _httpAgent;
        private readonly AutoMapper.IMapper _mapper;

        /// <summary>
        /// Initializes a new instance of the <see cref="PostalInfoData"/> class.
        /// </summary>
        /// <param name="httpAgent">The <see cref="IZippoAgent"/>.</param>
        /// <param name="mapper">The <see cref="AutoMapper.IMapper"/>.</param>
        public PostalInfoData(IZippoAgent httpAgent, AutoMapper.IMapper mapper)
            { _httpAgent = Check.NotNull(httpAgent, nameof(httpAgent)); _mapper = Check.NotNull(mapper, nameof(mapper)); PostalInfoDataCtor(); }

        partial void PostalInfoDataCtor(); // Enables additional functionality to be added to the constructor.

        /// <summary>
        /// Gets the specified <see cref="PostalInfo"/>.
        /// </summary>
        /// <param name="country">The Country.</param>
        /// <param name="state">The State.</param>
        /// <param name="city">The City.</param>
        /// <returns>The selected <see cref="PostalInfo"/> where found.</returns>
        public Task<PostalInfo?> GetPostCodesAsync(RefDataNamespace.Country? country, string? state, string? city) => DataInvoker.Current.InvokeAsync(this, async () =>
        {
            var __dataArgs = HttpSendArgs.Create(_mapper, HttpMethod.Get, $"{country.Code}/{state}/{city}", true);
            return (await _httpAgent.SendMappedResponseAsync<PostalInfo, Model.PostalInfo>(__dataArgs).ConfigureAwait(false)).Value;
        });
    }
}

#pragma warning restore
#nullable restore