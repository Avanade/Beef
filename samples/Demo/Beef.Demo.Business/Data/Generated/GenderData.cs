/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace Beef.Demo.Business.Data;

/// <summary>
/// Provides the <see cref="Gender"/> data access.
/// </summary>
public partial class GenderData : IGenderData
{
    private readonly IDatabase _db;

    /// <summary>
    /// Initializes a new instance of the <see cref="GenderData"/> class.
    /// </summary>
    /// <param name="db">The <see cref="IDatabase"/>.</param>
    public GenderData(IDatabase db)
        { _db = db.ThrowIfNull(); GenderDataCtor(); }

    partial void GenderDataCtor(); // Enables additional functionality to be added to the constructor.

    /// <inheritdoc/>
    public Task<Result<Gender?>> GetAsync(Guid id)
        => _db.StoredProcedure("[Ref].[spGenderGet]").GetWithResultAsync(DbMapper.Default, id);

    /// <inheritdoc/>
    public Task<Result<Gender>> CreateAsync(Gender value)
        => _db.StoredProcedure("[Ref].[spGenderCreate]").CreateWithResultAsync(DbMapper.Default, value);

    /// <inheritdoc/>
    public Task<Result<Gender>> UpdateAsync(Gender value)
        => _db.StoredProcedure("[Ref].[spGenderUpdate]").UpdateWithResultAsync(DbMapper.Default, value);

    /// <summary>
    /// Provides the <see cref="Gender"/> property and database column mapping.
    /// </summary>
    public partial class DbMapper : DatabaseMapper<Gender, DbMapper>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DbMapper"/> class.
        /// </summary>
        public DbMapper()
        {
            Property(s => s.Id, "GenderId").SetPrimaryKey(true);
            Property(s => s.Code);
            Property(s => s.Text);
            Property(s => s.IsActive);
            Property(s => s.SortOrder);
            Property(s => s.AlternateName);
            Property(s => s.TripCode);
            Property(s => s.Country, "CountryId").SetConverter(ReferenceDataIdConverter<RefDataNamespace.Country, Guid?>.Default);
            Property(s => s.ETag, "RowVersion", operationTypes: OperationTypes.AnyExceptCreate).SetConverter(StringToBase64Converter.Default);
            DbMapperCtor();
        }
            
        partial void DbMapperCtor(); // Enables the DbMapper constructor to be extended.
    }
}

#pragma warning restore
#nullable restore