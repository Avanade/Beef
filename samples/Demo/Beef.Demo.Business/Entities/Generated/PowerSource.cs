/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace Beef.Demo.Business.Entities
{
    /// <summary>
    /// Represents the Power Source entity.
    /// </summary>
    public partial class PowerSource : ReferenceDataBase<Guid, PowerSource>
    {
        private string? _additionalInfo;

        /// <summary>
        /// Gets or sets the Additional Info.
        /// </summary>
        public string? AdditionalInfo { get => _additionalInfo; set => SetValue(ref _additionalInfo, value); }

        /// <inheritdoc/>
        protected override IEnumerable<IPropertyValue> GetPropertyValues()
        {
            yield return CreateProperty(AdditionalInfo, v => AdditionalInfo = v);
        }

        /// <summary>
        /// An implicit cast from a <see cref="IReferenceData.Code"> to a <see cref="PowerSource"/>.
        /// </summary>
        /// <param name="code">The <b>Code</b>.</param>
        /// <returns>The corresponding <see cref="PowerSource"/>.</returns>
        public static implicit operator PowerSource?(string? code) => ConvertFromCode(code);
    }

    /// <summary>
    /// Represents the <see cref="PowerSource"/> collection.
    /// </summary>
    public partial class PowerSourceCollection : ReferenceDataCollectionBase<Guid, PowerSource, PowerSourceCollection>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PowerSourceCollection"/> class.
        /// </summary>
        public PowerSourceCollection() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="PowerSourceCollection"/> class with a <paramref name="collection"/> of items to add.
        /// </summary>
        /// <param name="collection">A collection containing items to add.</param>
        public PowerSourceCollection(IEnumerable<PowerSource> collection) => AddRange(collection);
    }
}

#pragma warning restore
#nullable restore