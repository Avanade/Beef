/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace Cdr.Banking.Business.Entities
{
    /// <summary>
    /// Represents the Open Status entity.
    /// </summary>
    public partial class OpenStatus : ReferenceDataBase<Guid, OpenStatus>
    {
        /// <summary>
        /// Represents a All (both Open and Closed) constant value.
        /// </summary>
        public const string All = "ALL";


        /// <summary>
        /// An implicit cast from a <see cref="IReferenceData.Code"> to a <see cref="OpenStatus"/>.
        /// </summary>
        /// <param name="code">The <b>Code</b>.</param>
        /// <returns>The corresponding <see cref="OpenStatus"/>.</returns>
        public static implicit operator OpenStatus?(string? code) => ConvertFromCode(code);
    }

    /// <summary>
    /// Represents the <see cref="OpenStatus"/> collection.
    /// </summary>
    public partial class OpenStatusCollection : ReferenceDataCollectionBase<Guid, OpenStatus, OpenStatusCollection>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OpenStatusCollection"/> class.
        /// </summary>
        public OpenStatusCollection() { }

        /// <summary>
        /// Initializes a new instance of the <see cref="OpenStatusCollection"/> class with a <paramref name="collection"/> of items to add.
        /// </summary>
        /// <param name="collection">A collection containing items to add.</param>
        public OpenStatusCollection(IEnumerable<OpenStatus> collection) => AddRange(collection);
    }
}

#pragma warning restore
#nullable restore