/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable
#pragma warning disable

namespace Cdr.Banking.Business.Data
{
    /// <summary>
    /// Provides the <b>ReferenceData</b> data access.
    /// </summary>
    public partial class ReferenceDataData : IReferenceDataData
    {
        private readonly ICosmos _cosmos;

        /// <summary>
        /// Initializes a new instance of the <see cref="ReferenceDataData"/> class.
        /// </summary>
        /// <param name="cosmos">The <see cref="ICosmos"/>.</param>
        public ReferenceDataData(ICosmos cosmos)
            { _cosmos = cosmos ?? throw new ArgumentNullException(nameof(cosmos)); ReferenceDataDataCtor(); }

        partial void ReferenceDataDataCtor(); // Enables additional functionality to be added to the constructor.

        /// <inheritdoc/>
        public Task<RefDataNamespace.OpenStatusCollection> OpenStatusGetAllAsync()
            => DataInvoker.Current.InvokeAsync(this, _ => _cosmos.ValueContainer<RefDataNamespace.OpenStatus, Model.OpenStatus>("RefData").Query().SelectQueryAsync<RefDataNamespace.OpenStatusCollection>());

        /// <inheritdoc/>
        public Task<RefDataNamespace.ProductCategoryCollection> ProductCategoryGetAllAsync()
            => DataInvoker.Current.InvokeAsync(this, _ => _cosmos.ValueContainer<RefDataNamespace.ProductCategory, Model.ProductCategory>("RefData").Query().SelectQueryAsync<RefDataNamespace.ProductCategoryCollection>());

        /// <inheritdoc/>
        public Task<RefDataNamespace.AccountUTypeCollection> AccountUTypeGetAllAsync()
            => DataInvoker.Current.InvokeAsync(this, _ => _cosmos.ValueContainer<RefDataNamespace.AccountUType, Model.AccountUType>("RefData").Query().SelectQueryAsync<RefDataNamespace.AccountUTypeCollection>());

        /// <inheritdoc/>
        public Task<RefDataNamespace.MaturityInstructionsCollection> MaturityInstructionsGetAllAsync()
            => DataInvoker.Current.InvokeAsync(this, _ => _cosmos.ValueContainer<RefDataNamespace.MaturityInstructions, Model.MaturityInstructions>("RefData").Query().SelectQueryAsync<RefDataNamespace.MaturityInstructionsCollection>());

        /// <inheritdoc/>
        public Task<RefDataNamespace.TransactionTypeCollection> TransactionTypeGetAllAsync()
            => DataInvoker.Current.InvokeAsync(this, _ => _cosmos.ValueContainer<RefDataNamespace.TransactionType, Model.TransactionType>("RefData").Query().SelectQueryAsync<RefDataNamespace.TransactionTypeCollection>());

        /// <inheritdoc/>
        public Task<RefDataNamespace.TransactionStatusCollection> TransactionStatusGetAllAsync()
            => DataInvoker.Current.InvokeAsync(this, _ => _cosmos.ValueContainer<RefDataNamespace.TransactionStatus, Model.TransactionStatus>("RefData").Query().SelectQueryAsync<RefDataNamespace.TransactionStatusCollection>());

        /// <summary>
        /// Provides the <see cref="RefDataNamespace.OpenStatus"/> and Entity Framework <see cref="Model.OpenStatus"/> <i>AutoMapper</i> mapping.
        /// </summary>
        public partial class OpenStatusMapperProfile : AutoMapper.Profile
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="OpenStatusMapperProfile"/> class.
            /// </summary>
            public OpenStatusMapperProfile()
            {
                var d2s = CreateMap<Model.OpenStatus, RefDataNamespace.OpenStatus>();
                OpenStatusMapperProfileCtor(d2s);
            }

            partial void OpenStatusMapperProfileCtor(AutoMapper.IMappingExpression<Model.OpenStatus, RefDataNamespace.OpenStatus> d2s); // Enables the constructor to be extended.
        }

        /// <summary>
        /// Provides the <see cref="RefDataNamespace.ProductCategory"/> and Entity Framework <see cref="Model.ProductCategory"/> <i>AutoMapper</i> mapping.
        /// </summary>
        public partial class ProductCategoryMapperProfile : AutoMapper.Profile
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="ProductCategoryMapperProfile"/> class.
            /// </summary>
            public ProductCategoryMapperProfile()
            {
                var d2s = CreateMap<Model.ProductCategory, RefDataNamespace.ProductCategory>();
                ProductCategoryMapperProfileCtor(d2s);
            }

            partial void ProductCategoryMapperProfileCtor(AutoMapper.IMappingExpression<Model.ProductCategory, RefDataNamespace.ProductCategory> d2s); // Enables the constructor to be extended.
        }

        /// <summary>
        /// Provides the <see cref="RefDataNamespace.AccountUType"/> and Entity Framework <see cref="Model.AccountUType"/> <i>AutoMapper</i> mapping.
        /// </summary>
        public partial class AccountUTypeMapperProfile : AutoMapper.Profile
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="AccountUTypeMapperProfile"/> class.
            /// </summary>
            public AccountUTypeMapperProfile()
            {
                var d2s = CreateMap<Model.AccountUType, RefDataNamespace.AccountUType>();
                AccountUTypeMapperProfileCtor(d2s);
            }

            partial void AccountUTypeMapperProfileCtor(AutoMapper.IMappingExpression<Model.AccountUType, RefDataNamespace.AccountUType> d2s); // Enables the constructor to be extended.
        }

        /// <summary>
        /// Provides the <see cref="RefDataNamespace.MaturityInstructions"/> and Entity Framework <see cref="Model.MaturityInstructions"/> <i>AutoMapper</i> mapping.
        /// </summary>
        public partial class MaturityInstructionsMapperProfile : AutoMapper.Profile
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="MaturityInstructionsMapperProfile"/> class.
            /// </summary>
            public MaturityInstructionsMapperProfile()
            {
                var d2s = CreateMap<Model.MaturityInstructions, RefDataNamespace.MaturityInstructions>();
                MaturityInstructionsMapperProfileCtor(d2s);
            }

            partial void MaturityInstructionsMapperProfileCtor(AutoMapper.IMappingExpression<Model.MaturityInstructions, RefDataNamespace.MaturityInstructions> d2s); // Enables the constructor to be extended.
        }

        /// <summary>
        /// Provides the <see cref="RefDataNamespace.TransactionType"/> and Entity Framework <see cref="Model.TransactionType"/> <i>AutoMapper</i> mapping.
        /// </summary>
        public partial class TransactionTypeMapperProfile : AutoMapper.Profile
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="TransactionTypeMapperProfile"/> class.
            /// </summary>
            public TransactionTypeMapperProfile()
            {
                var d2s = CreateMap<Model.TransactionType, RefDataNamespace.TransactionType>();
                TransactionTypeMapperProfileCtor(d2s);
            }

            partial void TransactionTypeMapperProfileCtor(AutoMapper.IMappingExpression<Model.TransactionType, RefDataNamespace.TransactionType> d2s); // Enables the constructor to be extended.
        }

        /// <summary>
        /// Provides the <see cref="RefDataNamespace.TransactionStatus"/> and Entity Framework <see cref="Model.TransactionStatus"/> <i>AutoMapper</i> mapping.
        /// </summary>
        public partial class TransactionStatusMapperProfile : AutoMapper.Profile
        {
            /// <summary>
            /// Initializes a new instance of the <see cref="TransactionStatusMapperProfile"/> class.
            /// </summary>
            public TransactionStatusMapperProfile()
            {
                var d2s = CreateMap<Model.TransactionStatus, RefDataNamespace.TransactionStatus>();
                TransactionStatusMapperProfileCtor(d2s);
            }

            partial void TransactionStatusMapperProfileCtor(AutoMapper.IMappingExpression<Model.TransactionStatus, RefDataNamespace.TransactionStatus> d2s); // Enables the constructor to be extended.
        }
    }
}

#pragma warning restore
#nullable restore