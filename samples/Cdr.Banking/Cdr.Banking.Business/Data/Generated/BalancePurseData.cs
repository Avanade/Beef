/*
 * This file is automatically generated; any changes will be lost. 
 */

namespace Cdr.Banking.Business.Data;

/// <summary>
/// Provides the <see cref="BalancePurse"/> data access.
/// </summary>
public partial class BalancePurseData
{

    /// <summary>
    /// Provides the <see cref="BalancePurse"/> to Cosmos <see cref="Model.BalancePurse"/> mapping.
    /// </summary>
    public partial class EntityToModelCosmosMapper : Mapper<BalancePurse, Model.BalancePurse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EntityToModelCosmosMapper"/> class.
        /// </summary>
        public EntityToModelCosmosMapper()
        {
            Map((s, d) => d.Amount = s.Amount, OperationTypes.Any, s => s.Amount == default, d => d.Amount = default);
            Map((s, d) => d.Currency = s.Currency, OperationTypes.Any, s => s.Currency == default, d => d.Currency = default);
            EntityToModelCosmosMapperCtor();
        }

        partial void EntityToModelCosmosMapperCtor(); // Enables the constructor to be extended.
    }

    /// <summary>
    /// Provides the Cosmos <see cref="Model.BalancePurse"/> to <see cref="BalancePurse"/> mapping.
    /// </summary>
    public partial class ModelToEntityCosmosMapper : Mapper<Model.BalancePurse, BalancePurse>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ModelToEntityCosmosMapper"/> class.
        /// </summary>
        public ModelToEntityCosmosMapper()
        {
            Map((s, d) => d.Amount = (decimal)s.Amount!, OperationTypes.Any, s => s.Amount == default, d => d.Amount = default);
            Map((s, d) => d.Currency = (string?)s.Currency!, OperationTypes.Any, s => s.Currency == default, d => d.Currency = default);
            ModelToEntityCosmosMapperCtor();
        }

        partial void ModelToEntityCosmosMapperCtor(); // Enables the constructor to be extended.
    }
}