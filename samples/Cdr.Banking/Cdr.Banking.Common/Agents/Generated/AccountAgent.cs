/*
 * This file is automatically generated; any changes will be lost.
 */

namespace Cdr.Banking.Common.Agents;

/// <summary>
/// Provides the <see cref="Account"/> HTTP agent.
/// </summary>
/// <param name="client">The underlying <see cref="HttpClient"/>.</param>
/// <param name="jsonSerializer">The optional <see cref="IJsonSerializer"/>.</param>
/// <param name="executionContext">The optional <see cref="CoreEx.ExecutionContext"/>.</param>
public partial class AccountAgent(HttpClient client, IJsonSerializer? jsonSerializer = null, CoreEx.ExecutionContext? executionContext = null) : TypedHttpClientBase<AccountAgent>(client, jsonSerializer, executionContext), IAccountAgent
{
    /// <inheritdoc/>
    public Task<HttpResult<AccountCollectionResult>> GetAccountsAsync(AccountArgs? args, PagingArgs? paging = null, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync<AccountCollectionResult>("api/v1/banking/accounts", requestOptions.IncludePaging(paging), [new HttpArg<AccountArgs?>("args", args, HttpArgType.FromUriUseProperties)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<AccountCollectionResult>> GetAccountsQueryAsync(QueryArgs? query = null, PagingArgs? paging = null, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync<AccountCollectionResult>("api/v1/banking/accounts/query", requestOptions: requestOptions.IncludeQuery(query).IncludePaging(paging), cancellationToken: cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<AccountDetail?>> GetDetailAsync(string? accountId, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync<AccountDetail?>("api/v1/banking/accounts/{accountId}", requestOptions, [new HttpArg<string?>("accountId", accountId)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult<Balance?>> GetBalanceAsync(string? accountId, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync<Balance?>("api/v1/banking/accounts/{accountId}/balance", requestOptions, [new HttpArg<string?>("accountId", accountId)], cancellationToken);

    /// <inheritdoc/>
    public Task<HttpResult> GetStatementAsync(string? accountId, HttpRequestOptions? requestOptions = null, CancellationToken cancellationToken = default)
        => GetAsync("api/v1/banking/accounts/{accountId}/statement", requestOptions, [new HttpArg<string?>("accountId", accountId)], cancellationToken);
}