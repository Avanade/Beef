/*
 * This file is automatically generated; any changes will be lost. 
 */

using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Text.Json.Serialization;
using CoreEx.Entities;

namespace Cdr.Banking.Common.Entities
{
    /// <summary>
    /// Represents the Transaction entity.
    /// </summary>
    public partial class Transaction : IIdentifier<string>
    {
        /// <summary>
        /// Gets or sets the <c>Account</c> identifier.
        /// </summary>
        [JsonPropertyName("transactionId")]
        public string? Id { get; set; }

        /// <summary>
        /// Gets or sets the Account Id.
        /// </summary>
        public string? AccountId { get; set; }

        /// <summary>
        /// Indicates whether Is Detail Available.
        /// </summary>
        public bool IsDetailAvailable { get; set; }

        /// <summary>
        /// Gets or sets the Type code.
        /// </summary>
        public string? Type { get; set; }

        /// <summary>
        /// Gets or sets the Status code.
        /// </summary>
        public string? Status { get; set; }

        /// <summary>
        /// Gets or sets the Description.
        /// </summary>
        public string? Description { get; set; }

        /// <summary>
        /// Gets or sets the Posting Date Time.
        /// </summary>
        public DateTime PostingDateTime { get; set; }

        /// <summary>
        /// Gets or sets the Execution Date Time.
        /// </summary>
        public DateTime ExecutionDateTime { get; set; }

        /// <summary>
        /// Gets or sets the Amount.
        /// </summary>
        public decimal Amount { get; set; }

        /// <summary>
        /// Gets or sets the Currency.
        /// </summary>
        public string? Currency { get; set; }

        /// <summary>
        /// Gets or sets the Reference.
        /// </summary>
        public string? Reference { get; set; }

        /// <summary>
        /// Gets or sets the Merchant Name.
        /// </summary>
        public string? MerchantName { get; set; }

        /// <summary>
        /// Gets or sets the Merchant Category Code.
        /// </summary>
        public string? MerchantCategoryCode { get; set; }

        /// <summary>
        /// Gets or sets the Biller Code.
        /// </summary>
        public string? BillerCode { get; set; }

        /// <summary>
        /// Gets or sets the Biller Name.
        /// </summary>
        public string? BillerName { get; set; }

        /// <summary>
        /// Gets or sets the Apca Number.
        /// </summary>
        public string? ApcaNumber { get; set; }
    }

    /// <summary>
    /// Represents the <c>Transaction</c> collection.
    /// </summary>
    public partial class TransactionCollection : List<Transaction> { }

    /// <summary>
    /// Represents the <c>Transaction</c> collection result.
    /// </summary>
    public class TransactionCollectionResult : CollectionResult<TransactionCollection, Transaction>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionCollectionResult"/> class.
        /// </summary>
        public TransactionCollectionResult() { }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionCollectionResult"/> class with <paramref name="paging"/>.
        /// </summary>
        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
        public TransactionCollectionResult(PagingArgs? paging) : base(paging) { }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionCollectionResult"/> class with <paramref name="items"/> to add.
        /// </summary>
        /// <param name="items">The items to add.</param>
        /// <param name="paging">The <see cref="PagingArgs"/>.</param>
        public TransactionCollectionResult(IEnumerable<Transaction> items, PagingArgs? paging = null) : base(paging) => Items.AddRange(items);
    }
}